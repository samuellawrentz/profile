{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-blog-i-built-a-vs-code-extension-to-standardize-git-commit-messages-here-s-how-you-can-too-post-mdx-73477dc7c0c8d21771c3.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./blog/i-built-a-vs-code-extension-to-standardize-git-commit-messages---here-s-how-you-can-too/post.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Have you ever struggled with inconsistent Git commit messages in your organization's repositories? If so, you're not alone. I too found myself frustrated by this issue, and I went in search of a VS Code extension that could help enforce a standardized format for commit messages. Unfortunately, I was unable to find an extension that met my needs. So, I decided to build my own!\"), \"\\n\", React.createElement(_components.p, null, \"In this post, I'll share with you the story of how I built a custom VS Code extension in JavaScript to streamline Git workflows and ensure consistent commit messages. With this extension, developers can prefill the SCM commit input box with a commit message in the format \", React.createElement(_components.code, null, \"(\\\\<Ticket number\\\\>) \\\\<Type\\\\>: \"), \", where the ticket number and type of commit are selected by the user. This format helps ensure consistency and clarity across commit messages in your organization's Git repositories.\"), \"\\n\", React.createElement(_components.h2, null, \"The Problem\"), \"\\n\", React.createElement(_components.p, null, \"Inconsistent Git commit messages can be a major headache for developers and project managers alike. Without a standard format for commit messages, it can be difficult to track changes, understand the purpose of a commit, and identify which tickets or issues a commit is related to. In my own organization, we struggled with inconsistent commit messages across various repositories, and I knew there had to be a better way.\"), \"\\n\", React.createElement(_components.h2, null, \"The Solution\"), \"\\n\", React.createElement(_components.p, null, \"After searching for a VS Code extension that could help standardize our commit messages, I realized that I would need to build my own. Fortunately, creating a custom VS Code extension in JavaScript is relatively straightforward.\"), \"\\n\", React.createElement(_components.p, null, \"To begin, I used the \", React.createElement(_components.a, {\n    href: \"https://code.visualstudio.com/api/get-started/your-first-extension\"\n  }, \"VS Code Extension Generator\"), \" to create a basic extension template.\"), \"\\n\", React.createElement(_components.p, null, \"The extension, written in JavaScript, adds a new command to VS Code called createCommitMessage. When the user executes this command, it prompts them to enter a ticket number and select a type of commit (such as \\\"feat\\\", \\\"fix\\\", or \\\"chore\\\"). It then constructs a commit message in the format (<Ticket number>) <Type>: , and pre-fills the Git commit input box with this message. The user can then add their own commit message and complete the commit as usual.\"), \"\\n\", React.createElement(_components.h2, null, \"The Code\"), \"\\n\", React.createElement(_components.p, null, \"This is not the actual code, but something similar is used. You can check the repository for more details.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"js\\\"  >\\n          <code slot=\\\"code\\\">function activate(context) {\\n  let disposable = vscode.commands.registerCommand(&#39;extension.createCommitMessage&#39;, function () {\\n    vscode.window.showInputBox({\\n      prompt: &#39;Enter the ticket number&#39;\\n    }).then(ticketNumber =&gt; {\\n      if (!ticketNumber) return;\\n      vscode.window.showQuickPick([&#39;feat&#39;, &#39;fix&#39;, &#39;chore&#39;], {\\n        placeHolder: &#39;Select the type of commit&#39;\\n      }).then(type =&gt; {\\n        if (!type) return;\\n        const commitMessage = `(${ticketNumber}) ${type}: `;\\n        const gitExtension = vscode.extensions.getExtension(&#39;vscode.git&#39;);\\n        if (!gitExtension) {\\n          vscode.window.showErrorMessage(&#39;Git extension not found&#39;);\\n          return;\\n        }\\n        const api = gitExtension.exports.getAPI(1);\\n        if (!api.repositories.length) {\\n          vscode.window.showErrorMessage(&#39;No Git repository found&#39;);\\n          return;\\n        }\\n        const repo = api.repositories[0];\\n        repo.inputBox.value = commitMessage;\\n      });\\n    });\\n  });\\n  context.subscriptions.push(disposable);\\n}</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"This code defines an activate function that registers the createCommitMessage command. When the command is executed, it uses showInputBox and showQuickPick to prompt the user for input, constructs a commit message in the desired format, and sets the value property of the Git commit input box to the message.\"), \"\\n\", React.createElement(_components.p, null, \"Overall, this extension provides a simple way to standardize commit messages across your organization and improve the consistency and clarity of your Git repositories.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/blog/i-built-a-vs-code-extension-to-standardize-git-commit-messages---here-s-how-you-can-too/post.mdx\";\nimport React, {useEffect} from \"react\";\nimport Giscus from \"@giscus/react\";\nimport \"./blog.scss\";\nimport Img from \"gatsby-image\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport Banner from \"../components/banner\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {EmailBlock} from \"../components/email-bar\";\nconst components = {\n  Banner\n};\nfunction Blog(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: `Samuel Lawrentz | ${props.data.mdx.frontmatter.title}`,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(Img, {\n    fluid: props.data.mdx.frontmatter.heroImage.childImageSharp.fluid,\n    className: \"hero-image\"\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\"\n  }, tag))), React.createElement(\"p\", {\n    className: \"regularLight\"\n  }, React.createElement(\"div\", {\n    className: \"text-regularLight\"\n  }, props.data.mdx.frontmatter.date)), React.createElement(Block, {\n    className: \"blog-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Consider subscribing to the newsletter for more tips and hacks like this.\", React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    }\n  }), React.createElement(EmailBlock, null)), React.createElement(Giscus, {\n    repo: \"samuellawrentz/blog-comments\",\n    repoId: \"R_kgDOH0vDow\",\n    category: \"General\",\n    categoryId: \"DIC_kwDOH0vDo84CQ111\",\n    mapping: \"pathname\",\n    reactionsEnabled: \"0\",\n    emitMetadata: \"0\",\n    theme: \"dark\"\n  }), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this post by Samuel Lawrentz on - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}\n            `,\n      subject: `Samuel Lawrentz Blog - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }));\n}\nBlog\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Blog, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"3567673815\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","h2","a","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","Banner","Blog","useEffect","deckDeckGoHighlightElement","className","SEO","title","data","mdx","frontmatter","description","image","path","replace","article","Img","fluid","heroImage","childImageSharp","Block","spacing","tags","map","tag","date","MDXProvider","children","style","marginTop","EmailBlock","Giscus","repo","repoId","category","categoryId","mapping","reactionsEnabled","emitMetadata","theme","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}