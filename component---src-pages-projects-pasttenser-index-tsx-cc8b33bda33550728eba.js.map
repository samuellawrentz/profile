{"version":3,"file":"component---src-pages-projects-pasttenser-index-tsx-cc8b33bda33550728eba.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./src/components/button/index.tsx","webpack://samuellawrentz-s-portfolio/./src/components/input/index.tsx","webpack://samuellawrentz-s-portfolio/./src/pages/projects/pasttenser/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport React, { ReactNode } from 'react'\nimport './index.scss'\n\ninterface Prop {\n    children: ReactNode,\n    type?: string,\n    size?: string,\n    disabled?: boolean,\n    onClick?: any,\n}\n\nfunction Button({type = \"primary\", size=\"regular\", children, disabled, ...props} : Prop) {\n  return (\n    <span className={['button', `button-${type}`, `button-${size}`, `button-${disabled ? 'disabled': ''}`].join(' ')} {...props}>{children}</span>\n  )\n}\n\nexport const LinkButton = ({to, ...props}: any) => <Link to={to} className=\"link-button\"><Button {...props}></Button></Link>\nexport default Button","import React from 'react'\nimport './index.scss'\n\nfunction Input(props: any) {\n  return (\n    <div className='input-wrapper'><input {...props} /></div>\n  )\n}\n\nexport default Input","import { StaticImage } from 'gatsby-plugin-image'\nimport React, { useState } from 'react'\nimport { Block } from '../../../components/block'\nimport Button from '../../../components/button'\nimport Input from '../../../components/input'\nimport './index.scss'\n\nfunction capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst errorMap = {\n  spaces: 'Do verbs have spaces? ðŸ¤¨ You are sus.',\n  long: 'Is there a verb that really goes like - \"{{verb}}\"? ðŸ¤¯',\n  other: 'We dont do that here! #wakandaForever ðŸ™…'\n}\n\nfunction PastTenser() {\n  const [result, setResult] = useState(null)\n  const [verb, setVerb] = useState('')\n  let error: any = null\n  if(verb.match(/[^A-Za-z]/g)) error = errorMap.other\n  if(verb.match(/\\s/g)) error = errorMap.spaces\n  if(verb.length > 20) error = errorMap.long.replace('{{verb}}', verb)\n\n  const fetchData = () => !error && fetch('https://pastenser.herokuapp.com/' + capitalizeFirstLetter(verb)).then(res => res.json()).then(val => setResult(val['past tense']))\n  \n  return (\n    <div>\n      <Block display='flex'  alignItems='center' className='khabyl-project'>\n        <Block flex='1 1 70%' style={{position: 'relative'}}>\n        <h1>PastTenser</h1>\n        <h2>A quick API that gives you the past tense of the requested verb.</h2>\n        <Block display='flex' spacing={[0, 32]} className='input-block'><Input maxlength=\"30\" placeholder=\"Enter a verb\" value={verb} onKeyPress={(e: any) => e.charCode === 13 && fetchData()} onChange={({target}: any) => {\n          setVerb(target.value)\n          setResult(null)\n        }}/><Button onClick={fetchData} disabled={!!error}>Find</Button></Block>\n        <div className=\"error-text\">{error}</div>\n        </Block>\n        <Block flex='1 0 30%' className={`khaby ${result? 'show': ''}`}>\n            <StaticImage src='../../../images/projects/khaby-lame 1.png' alt=\"Khaby Lame\" class=\"open\" />\n            <StaticImage src='../../../images/projects/khaby-lame 2.png' alt=\"Khaby Lame\" class=\"close\"/>\n            <div className={`result ${result ? ``: 'hide'}`}>{result}</div>\n        </Block>\n    </Block>\n    <div className=\"khaby-section\">\n      <h3>How does it work?</h3>\n      <p>It's very simple. In fact, it is a normal Javascript map lookup. The backend for this is written in NodeJS with ExpressJS and hosted on Heroku.\n        It's an API that I developed just for fun so you can use it for fun.<br /><span className='text-caption'>Additional fact: This API also returns the past-participle form of the verb.</span></p>\n      <p>As you know, the image I used here is <b>Khaby Lame.</b> He is just awesome for his quirky parody videos. \n        I find his facial expressions funny and useful in a page like this.</p>\n    </div>\n    <div className=\"khaby-section\">\n      <h3>Lets Get Technical</h3>\n      <p><b>CSS properties:</b> clip-path, keyframes, transform - skew, rotate<br />\n      <b>Javascript Stack:</b> NodeJS, React, ExpressJS, Fetch API<br />\n      <b>Deployed to:</b> Heroku\n      </p>\n    </div>\n    </div>\n  )\n}\n\nexport default PastTenser"],"names":["Button","type","size","children","disabled","props","React","className","join","LinkButton","to","Link","errorMap","spaces","long","other","useState","result","setResult","verb","setVerb","error","match","length","replace","fetchData","fetch","string","charAt","toUpperCase","slice","then","res","json","val","Block","display","alignItems","flex","style","position","spacing","Input","maxlength","placeholder","value","onKeyPress","e","charCode","onChange","target","onClick","StaticImage","src","alt","class"],"sourceRoot":""}