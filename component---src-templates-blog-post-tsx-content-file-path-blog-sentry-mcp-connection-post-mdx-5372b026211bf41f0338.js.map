{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-blog-sentry-mcp-connection-post-mdx-5372b026211bf41f0338.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./blog/sentry-mcp-connection/post.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\",\n    span: \"span\",\n    h3: \"h3\",\n    a: \"a\",\n    code: \"code\",\n    ul: \"ul\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Hey there, fellow code wrangler! 👋 Tired of jumping between Cursor and Sentry tabs like a caffeinated kangaroo? Well, grab your favorite debugging mug because we're about to connect these two beautiful tools using the magic of MCP (Model Context Protocol)!\"), \"\\n\", React.createElement(_components.h2, null, \"What's this MCP thing anyway? 🤔\"), \"\\n\", React.createElement(_components.p, null, \"Model Context Protocol (MCP) is an open protocol designed to establish secure bidirectional connections between AI-powered development tools and various data sources. In the context of Sentry integration, MCP creates a standardized communication layer that allows Cursor's AI features to directly interact with your error tracking and performance monitoring data, enabling real-time analysis and intelligent querying capabilities.\"), \"\\n\", React.createElement(_components.h2, null, \"Prerequisites (The Boring-but-Important Stuff)\"), \"\\n\", React.createElement(_components.p, null, \"Before we dive in, let's make sure you've got all your ducks in a row:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Cursor IDE\"), \" - You've got this installed, right? RIGHT?\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Python & pipx\"), \" - Because we're fancy like that\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"bash\\\"  >\\n          <code slot=\\\"code\\\"># Install pipx if you haven&#39;t already\\npython -m pip install --user pipx\\npython -m pipx ensurepath\\n\\n# Verify installation\\npipx --version</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Sentry Account\"), \" - You'll need one of those sweet, sweet auth tokens\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"The Main Event: Setting Up Sentry MCP 🎪\"), \"\\n\", React.createElement(_components.h3, null, \"Step 1: Grab Your Auth Token\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Head over to \", React.createElement(_components.a, {\n    href: \"https://sentry.io\"\n  }, \"Sentry.io\")), \"\\n\", React.createElement(_components.li, null, \"Navigate to Settings > Auth Tokens\"), \"\\n\", React.createElement(_components.li, null, \"Create a new token (give it the permissions it needs to be useful)\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Step 2: Fire Up the MCP Server\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"bash\\\"  >\\n          <code slot=\\\"code\\\">pipx run mcp-server-sentry --auth-token YOUR_TOKEN</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Replace \", React.createElement(_components.code, null, \"YOUR_TOKEN\"), \" with your actual token. And please, for the love of all things holy, don't commit this token to Git! 🙈\"), \"\\n\", React.createElement(_components.h3, null, \"Step 3: Configure Cursor\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Open Cursor Settings (the gear icon, you know the drill)\"), \"\\n\", React.createElement(_components.li, null, \"Find Features > MCP\"), \"\\n\", React.createElement(_components.li, null, \"Click \\\"+ Add New MCP Server\\\"\"), \"\\n\", React.createElement(_components.li, null, \"Fill in these details:\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Transport Type: \", React.createElement(_components.code, null, \"command\")), \"\\n\", React.createElement(_components.li, null, \"Name: \\\"Sentry\\\" (or \\\"Error-Be-Gone\\\" if you're feeling creative)\"), \"\\n\", React.createElement(_components.li, null, \"Command: The command from Step 2\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Testing Your Connection 🧪\"), \"\\n\", React.createElement(_components.p, null, \"If everything's working, you should be able to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"See Sentry in your MCP server list\"), \"\\n\", React.createElement(_components.li, null, \"Query error events\"), \"\\n\", React.createElement(_components.li, null, \"Track performance metrics\"), \"\\n\", React.createElement(_components.li, null, \"Feel like a 10x developer\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Try these cool prompts in Cursor:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code   >\\n          <code slot=\\\"code\\\">&quot;Show me production errors from last hour&quot;\\n&quot;List unresolved issues affecting most users&quot;\\n&quot;Get performance metrics for the auth service&quot;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Troubleshooting (When Things Go South) 🔧\"), \"\\n\", React.createElement(_components.p, null, \"If your connection is acting like a moody teenager:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Check your auth token (is it valid?)\"), \"\\n\", React.createElement(_components.li, null, \"Verify pipx installation (\", React.createElement(_components.code, null, \"pipx --version\"), \")\"), \"\\n\", React.createElement(_components.li, null, \"Look for error messages in Cursor's MCP logs\"), \"\\n\", React.createElement(_components.li, null, \"Make sure your network isn't blocking the connection\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Pro Tips 🎯\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Keep your token secure (seriously, don't share it!)\"), \"\\n\", React.createElement(_components.li, null, \"Use minimal permissions\"), \"\\n\", React.createElement(_components.li, null, \"Regular health checks are your friend\"), \"\\n\", React.createElement(_components.li, null, \"Update your MCP server package regularly\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Wrapping Up 🎁\"), \"\\n\", React.createElement(_components.p, null, \"There you have it! You've just leveled up your error tracking game. Now your Cursor IDE can chat directly with Sentry, making debugging feel less like a wild goose chase and more like a guided tour.\"), \"\\n\", React.createElement(_components.p, null, \"Remember: With great power comes great responsibility. Use your new MCP superpowers wisely!\"), \"\\n\", React.createElement(_components.p, null, \"Happy coding! 🚀\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"P.S. If this helped you avoid at least one production fire, consider sharing it with your team. They'll thank you later! 😉\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/blog/sentry-mcp-connection/post.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport Giscus from \"@giscus/react\";\nimport \"./blog.scss\";\nimport Img from \"gatsby-image\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport Banner from \"../components/banner\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {\n  Banner\n};\nfunction Blog(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: `Samuel Lawrentz | ${props.data.mdx.frontmatter.title}`,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(Img, {\n    fluid: props.data.mdx.frontmatter.heroImage.childImageSharp.fluid,\n    className: \"hero-image\"\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\"\n  }, tag))), React.createElement(\"p\", {\n    className: \"regularLight\"\n  }, React.createElement(\"div\", {\n    className: \"text-regularLight\"\n  }, props.data.mdx.frontmatter.date)), React.createElement(Block, {\n    className: \"blog-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"That's it for now, thanks for reading! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"), React.createElement(Giscus, {\n    repo: \"samuellawrentz/blog-comments\",\n    repoId: \"R_kgDOH0vDow\",\n    category: \"General\",\n    categoryId: \"DIC_kwDOH0vDo84CQ111\",\n    mapping: \"pathname\",\n    reactionsEnabled: \"0\",\n    emitMetadata: \"0\",\n    theme: \"dark\"\n  }), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this post by Samuel Lawrentz on - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}\n            `,\n      subject: `Samuel Lawrentz Blog - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }));\n}\nBlog\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Blog, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"3567673815\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","ol","li","strong","span","h3","a","code","ul","hr","_provideComponents","components","React","dangerouslySetInnerHTML","__html","start","href","wrapper","MDXLayout","Banner","Blog","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Img","fluid","heroImage","childImageSharp","Block","spacing","tags","map","tag","date","MDXProvider","children","i","randomPost","key","Link","to","Giscus","repo","repoId","category","categoryId","mapping","reactionsEnabled","emitMetadata","theme","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}