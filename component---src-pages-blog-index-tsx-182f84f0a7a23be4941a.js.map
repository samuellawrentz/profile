{"version":3,"file":"component---src-pages-blog-index-tsx-182f84f0a7a23be4941a.js","mappings":"2MAgCA,UAzBA,YAA8B,IAAdA,EAAa,EAAbA,KACd,OACEC,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACC,EAAAA,EAAD,CAAKC,MAAM,wDACfC,YAAY,2IAEZH,EAAAA,cAAAA,KAAAA,CAAII,UAAU,mBAAd,aACAJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,UACVL,EAAKM,OAAOC,MAAMC,KAAI,WAAiFC,GAAe,IAA9FC,EAA6F,EAA7FA,QAA6F,IAApFC,YAAcC,EAAsE,EAAtEA,KAAMT,EAAgE,EAAhEA,MAAOU,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,UAAWV,EAAwC,EAAxCA,YAAaW,EAA2B,EAA3BA,KACjFC,EAAgB,IAANP,EACVQ,EAAWD,EAAU,KAAO,KAClC,OAAOf,EAAAA,cAACiB,EAAAA,GAAD,CAAMC,GAAIN,EAAMR,UAAS,MAAQI,GACpCR,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,eAAcJ,EAAAA,cAACmB,EAAAA,EAAD,CAAKC,MAAOP,EAAUQ,gBAAgBD,MAAOE,IAAKpB,KAC/EF,EAAAA,cAACgB,EAAD,CAAUZ,UAAU,cAAcF,GAClCF,EAAAA,cAAAA,MAAAA,KAAMe,EAAUZ,EAAcM,GAC9BT,EAAAA,cAACuB,EAAAA,EAAD,CAAOnB,UAAU,OAAOoB,QAAS,CAAC,EAAG,KAAMV,EAAKP,KAAI,SAACkB,GAAD,OAAczB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OAAOqB,OACxFzB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,0BAA0BO","sources":["webpack://samuellawrentz-s-portfolio/./src/pages/blog/index.tsx"],"sourcesContent":["import { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport SEO from '../../components/seo'\nimport './index.scss'\nimport Img from 'gatsby-image'\nimport { Block } from '../../components/block'\n\nfunction Blog({ data }: any) {\n  return (\n    <div>\n        <SEO title=\"Samuel Lawrentz - Tech Blog, Web development, CSS, JS\"\n    description=\"How I work with frontend stack and automate stuff to solve the problem of maintaining, modifying, and upgrading frontend technologies.\"\n    />\n    <h1 className=\"blog-page-title\">THE BLOG </h1>\n    <div className=\"parent\">\n        {data.allMdx.nodes.map(({excerpt, frontmatter: {date, title, path, heroImage, description, tags}}: any, i: number) => { \n            const isFirst = i === 0\n            const TitleTag = isFirst ? \"h2\" : \"h3\"\n            return <Link to={path} className={`div${i}`}>\n                <div className=\"card__image\"><Img fluid={heroImage.childImageSharp.fluid} alt={title}/></div>\n                <TitleTag className=\"blog-title\">{title}</TitleTag>\n                <div>{isFirst ? description : excerpt}</div>\n                <Block className=\"tags\" spacing={[0, 12]}>{tags.map((tag: any) => <div className='tag'>{tag}</div>)}</Block>\n                <div className='text-regularLight date'>{date}</div>\n            </Link>\n            \n            })}\n    </div>\n    </div>\n  )\n}\n\nexport default Blog\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: {fields: [frontmatter___date], order: DESC}\n      filter: {frontmatter: {published: {eq: true}}}\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 90)\n        frontmatter {\n          title\n          tags\n          description\n          date(formatString: \"DD MMM, YYYY\")\n\t\t      path\n          heroImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }`"],"names":["data","React","SEO","title","description","className","allMdx","nodes","map","i","excerpt","frontmatter","date","path","heroImage","tags","isFirst","TitleTag","Link","to","Img","fluid","childImageSharp","alt","Block","spacing","tag"],"sourceRoot":""}