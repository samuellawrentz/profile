{"version":3,"file":"component---src-templates-hacks-tsx-content-file-path-hacks-neovim-boost-your-coding-efficiency-neovim-tips-tricks-hack-mdx-4ecc77c5289cf57b819d.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./hacks/neovim/boost-your-coding-efficiency-neovim-tips-tricks/hack.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    a: \"a\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Boost Your Coding Efficiency: Neovim Tips & Tricks\"), \"\\n\", React.createElement(_components.p, null, \"Neovim has become a favorite among developers for its extensibility and efficiency. In this blog post, we explore some essential tips and tricks to get the most out of Neovim and boost your coding efficiency.\"), \"\\n\", React.createElement(_components.h3, null, \"1. Master Key Mappings\"), \"\\n\", React.createElement(_components.p, null, \"Custom key mappings can drastically speed up your workflow. Neovim allows you to remap keys to suit your preferences. Here’s an example of how to set custom key mappings in your \", React.createElement(_components.code, null, \"init.vim\"), \" file:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; Remap leader key to space\\nlet mapleader=&quot; &quot;\\n\\n&quot; Save file with leader + s\\nnnoremap &lt;leader&gt;s :w&lt;CR&gt;\\n\\n&quot; Quit Neovim with leader + q\\nnnoremap &lt;leader&gt;q :q&lt;CR&gt;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"By customizing your key mappings, you can execute frequent commands faster, reducing the time spent on repetitive tasks.\"), \"\\n\", React.createElement(_components.h3, null, \"2. Utilize Neovim Plugins\"), \"\\n\", React.createElement(_components.p, null, \"Plugins can significantly enhance Neovim’s functionality. Here are a few must-have plugins:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.a, {\n    href: \"https://github.com/junegunn/vim-plug\"\n  }, \"vim-plug\")), \": A minimalist plugin manager.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.a, {\n    href: \"https://github.com/neoclide/coc.nvim\"\n  }, \"coc.nvim\")), \": Intellisense engine for fast, smart completion.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.a, {\n    href: \"https://github.com/preservim/nerdtree\"\n  }, \"nerdtree\")), \": File system explorer for navigation.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"To install these plugins, add the following to your \", React.createElement(_components.code, null, \"init.vim\"), \":\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; Plug plugin manager\\ncall plug#begin(&#39;~/.vim/plugged&#39;)\\n\\n&quot; List of plugins\\nPlug &#39;junegunn/vim-plug&#39;\\nPlug &#39;neoclide/coc.nvim&#39;, {&#39;branch&#39;: &#39;release&#39;}\\nPlug &#39;preservim/nerdtree&#39;\\n\\n&quot; Initialize plugin system\\ncall plug#end()</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"3. Optimize Startup Time\"), \"\\n\", React.createElement(_components.p, null, \"A slow startup can hinder productivity. To speed up Neovim's startup time, consider lazy loading plugins. For example, you can load \", React.createElement(_components.code, null, \"NERDTree\"), \" only when it's needed:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">Plug &#39;preservim/nerdtree&#39;, { &#39;on&#39;: &#39;NERDTreeToggle&#39; }</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"This prevents the plugin from loading at startup, reducing the time Neovim takes to initialize.\"), \"\\n\", React.createElement(_components.h3, null, \"4. Customize Status Line\"), \"\\n\", React.createElement(_components.p, null, \"A well-customized status line can provide critical information at a glance. \", React.createElement(_components.code, null, \"lightline.vim\"), \" is a popular choice for this:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">Plug &#39;itchyny/lightline.vim&#39;\\n\\n&quot; Customize lightline\\nlet g:lightline = {\\n      \\\\ &#39;colorscheme&#39;: &#39;wombat&#39;,\\n      \\\\ &#39;active&#39;: {\\n      \\\\   &#39;left&#39;: [ [ &#39;mode&#39;, &#39;paste&#39; ],\\n      \\\\             [ &#39;gitbranch&#39;, &#39;readonly&#39;, &#39;filename&#39;, &#39;modified&#39; ] ]\\n      \\\\ },\\n      \\\\ &#39;component_function&#39;: {\\n      \\\\   &#39;gitbranch&#39;: &#39;FugitiveHead&#39;\\n      \\\\ },\\n      \\\\ }</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"5. Leverage Built-in LSP\"), \"\\n\", React.createElement(_components.p, null, \"Neovim’s built-in Language Server Protocol (LSP) support provides IDE-like features. To configure LSP, use the \", React.createElement(_components.code, null, \"nvim-lspconfig\"), \" plugin:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">Plug &#39;neovim/nvim-lspconfig&#39;\\n\\nlua &lt;&lt; EOF\\nrequire&#39;lspconfig&#39;.pyright.setup{}\\nEOF</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"This configuration sets up LSP for Python using \", React.createElement(_components.code, null, \"pyright\"), \".\"), \"\\n\", React.createElement(_components.h2, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"Neovim’s flexibility and efficiency can be unlocked with these tips and tricks. By mastering key mappings, utilizing plugins, optimizing startup time, customizing the status line, and leveraging built-in LSP, you can significantly boost your coding efficiency.\"), \"\\n\", React.createElement(_components.p, null, \"Ready to transform your coding experience? \", React.createElement(_components.a, {\n    href: \"https://neovim.io/\"\n  }, \"Download Neovim\"), \" and start customizing today!\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"\\\"Your keyboard is your paintbrush and Neovim is your canvas.\\\" — Anonymous\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"Feel free to share your Neovim tips and tricks in the comments or reach out for further discussions on enhancing your coding setup!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/hacks/neovim/boost-your-coding-efficiency-neovim-tips-tricks/hack.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport \"./blog.scss\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {};\nfunction Hack(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: props.data.mdx.frontmatter.title,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag))), React.createElement(Block, {\n    className: \"hacks-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this hack by Samuel Lawrentz - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      subject: `Samuel Lawrentz Hacks - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Keep experimenting and happy coding! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"));\n}\nHack\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Hack, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4180202813\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","code","span","ul","li","strong","a","hr","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","Hack","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Block","spacing","tags","map","tag","key","MDXProvider","children","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","i","randomPost","Link","to","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}