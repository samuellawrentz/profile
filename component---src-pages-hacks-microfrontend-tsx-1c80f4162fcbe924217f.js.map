{"version":3,"file":"component---src-pages-hacks-microfrontend-tsx-1c80f4162fcbe924217f.js","mappings":"sKAaA,IATA,SAAeA,GACb,OACEC,EAAAA,cAAA,OAAKC,UAAU,iBACZF,EAAMG,MAAQF,EAAAA,cAACG,EAAAA,EAAI,CAACC,MAAM,WAAWC,KAAMN,EAAMG,KAAMD,UAAU,YAClED,EAAAA,cAAA,QAAWD,GAGjB,C,mECEA,MAAMO,EAAMC,IAAkD,IAAjD,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,QAAEC,GAAcJ,EACtD,MAAM,SAAEK,IAAaC,EAAAA,EAAAA,gBACf,KAAEC,IAASC,EAAAA,EAAAA,IAAeC,IAE1B,aACJC,EAAY,mBACZC,EAAkB,QAClBC,EAAO,aACPC,EAAY,gBACZC,GACEP,EAAKQ,aAEHC,EAAM,CACVf,MAAOA,GAASS,EAChBR,YAAaA,GAAeS,EAC5BR,MAAQ,GAAES,IAAUT,GAASU,IAC7BI,IAAM,GAAEL,IAAUP,KAGpB,OACEZ,EAAAA,cAACyB,EAAAA,EAAM,CAACjB,MAAOe,EAAIf,OACjBR,EAAAA,cAAA,QAAMK,KAAK,cAAcqB,QAASH,EAAId,cACtCT,EAAAA,cAAA,QAAMK,KAAK,QAAQqB,QAASH,EAAIb,QAE/Ba,EAAIC,KAAOxB,EAAAA,cAAA,QAAM2B,SAAS,SAASD,QAASH,EAAIC,MAEjDxB,EAAAA,cAAA,QAAM2B,SAAS,UAAUD,QAASf,EAAU,UAAY,YAEvDY,EAAIf,OAASR,EAAAA,cAAA,QAAM2B,SAAS,WAAWD,QAASH,EAAIf,QAEpDe,EAAId,aACHT,EAAAA,cAAA,QAAM2B,SAAS,iBAAiBD,QAASH,EAAId,cAG9Cc,EAAIb,OAASV,EAAAA,cAAA,QAAM2B,SAAS,WAAWD,QAASH,EAAIb,QAErDV,EAAAA,cAAA,QAAMK,KAAK,eAAeqB,QAAQ,wBAEjCL,GACCrB,EAAAA,cAAA,QAAMK,KAAK,kBAAkBqB,QAASL,IAGvCE,EAAIf,OAASR,EAAAA,cAAA,QAAMK,KAAK,gBAAgBqB,QAASH,EAAIf,QAErDe,EAAId,aACHT,EAAAA,cAAA,QAAMK,KAAK,sBAAsBqB,QAASH,EAAId,cAG/Cc,EAAIb,OAASV,EAAAA,cAAA,QAAMK,KAAK,gBAAgBqB,QAASH,EAAIb,QAC/C,EAIb,MASAJ,EAAIsB,aAAe,CACjBpB,MAAO,KACPC,YAAa,KACbC,MAAO,KACPC,SAAS,GAGX,MAAMK,EAAK,Y,sDCxEX,UAJA,SAAcT,GAAgB,IAAf,KAAEsB,GAAWtB,EAC1B,OAAOP,EAAAA,cAAC8B,EAAAA,EAAa,CAACD,KAAMA,EAAME,SAAS,iBAC7C,C,6GCFO,MAAMD,EAAgBvB,IAA8B,IAA7B,KAAEsB,EAAI,SAAEE,GAAexB,EACnD,MAAM,EAACyB,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,IACvCC,EAAQN,EAAKO,OAAOC,MAAMC,QAC9BC,IAAA,IAAC,QAAEC,EAASC,aAAa,MAAEjC,EAAK,YAAEC,EAAW,KAAEiC,IAAaH,EAAA,OAGhB,IAFzC,GAAEC,KAAWhC,KAASC,KAAeiC,EAAKC,KAAK,OAC7CC,cACAC,QAAQb,EAAWY,cAAqB,IAE/C,OACE5C,EAAAA,cAAA,WACEA,EAAAA,cAACM,EAAAA,EAAG,CACFE,MAAM,kDACNC,YAAY,qRAEdT,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAAA,UAAI,wBACJA,EAAAA,cAAA,KAAG8C,MAAO,CAAEC,UAAW,WAAY,2DAGnC/C,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAACgD,EAAAA,EAAK,CACJC,QAAQ,OACRC,QAAS,CAAC,EAAG,IACbjD,UAAU,sBAEVD,EAAAA,cAACmD,EAAAA,EAAK,CACJC,UAAU,KACVC,YAAY,gCACZC,SAAUC,IAAA,IAAC,OAAEC,GAAaD,EAAA,OAAKtB,EAAcuB,EAAOC,MAAM,EAC1DvD,KAAK,YAGTF,EAAAA,cAACgD,EAAAA,EAAK,CACJC,QAAQ,OACRS,IAAK,GACLC,eAAe,SACfT,QAAS,CAAC,EAAG,KAEZ,CAAC,aAAc,QAAS,iBAAiBU,KAAKC,GAC7C7D,EAAAA,cAAC8D,EAAAA,GAAI,CACHC,GAAK,UAASF,IACd5D,UAAY,oBACV8B,IAAa8B,GAAY,WAE3BG,IAAKH,GAEJA,QAMX7D,EAAAA,cAAA,OAAKC,UAAU,SACZkC,EAAMyB,KACL,CAAAK,EAEEC,KACI,IAFFzB,aAAa,SAAEoB,EAAQ,MAAErD,EAAK,KAAE2D,EAAI,YAAE1D,EAAW,KAAEiC,IAAauB,EAIlE,OADAC,GAAQ,EAENlE,EAAAA,cAAC8D,EAAAA,GAAI,CAACC,GAAII,EAAMlE,UAAY,GAAG+D,IAAKE,GAClClE,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,UAAKQ,GACLR,EAAAA,cAAA,OAAKC,UAAU,wBAAwBQ,GACvCT,EAAAA,cAACgD,EAAAA,EAAK,CAACC,QAAQ,OAAOS,IAAK,EAAGZ,MAAO,CAAEsB,SAAU,KAC/CpE,EAAAA,cAAA,UACEA,EAAAA,cAAA,SAAG,UACF0C,EAAKC,KAAK,SAIZ,KAIXR,EAAMkC,QACNrE,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,aAAY,cAC3BD,EAAAA,cAAA,WAAK,6DAIP,C","sources":["webpack://samuellawrentz-s-portfolio/./src/components/input/index.tsx","webpack://samuellawrentz-s-portfolio/./src/components/seo/index.tsx","webpack://samuellawrentz-s-portfolio/./src/pages/hacks/microfrontend.tsx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks-home.tsx"],"sourcesContent":["import React from 'react'\nimport { Icon } from '../icon'\nimport './index.scss'\n\nfunction Input(props: any) {\n  return (\n    <div className='input-wrapper'>\n      {props.icon && <Icon color=\"surface2\" name={props.icon} className=\"sl-icon\"/>}\n      <input {...props} />\n    </div>\n  )\n}\n\nexport default Input","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  image?: string;\n  article?: boolean;\n}\n\nconst SEO = ({ title, description, image, article }: any) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n\n  const {\n    defaultTitle,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  return (\n    <Helmet title={seo.title}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      <meta property=\"og:type\" content={article ? \"article\" : \"website\"} />\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`;\n\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\n\nimport \"./../blog/index.scss\";\nimport { HacksTemplate } from \"../../templates/hacks-home\";\n\nfunction Hacks({ data }: any) {\n  return <HacksTemplate data={data} pageType=\"microfrontend\" />;\n}\n\nexport default Hacks;\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        frontmatter: { type: { eq: \"hack\" }, category: { eq: \"microfrontend\" } }\n      }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 150)\n        frontmatter {\n          title\n          tags\n          description\n          date(formatString: \"DD MMM, YYYY\")\n          path\n          category\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport SEO from \"../components/seo\";\nimport { Block } from \"../components/block\";\nimport Input from \"../components/input\";\nimport { Link } from \"gatsby-link\";\n\nexport const HacksTemplate = ({ data, pageType }: any) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const hacks = data.allMdx.nodes.filter(\n    ({ excerpt, frontmatter: { title, description, tags } }: any) =>\n      `${excerpt}|${title}|${description}|${tags.join(\"|\")}`\n        .toLowerCase()\n        .indexOf(searchTerm.toLowerCase()) !== -1,\n  );\n  return (\n    <div>\n      <SEO\n        title=\"Hacks for Developers - Web development, CSS, JS\"\n        description=\" Unlock top-tier web development, terminal, database, and computer science hacks on our unique platform. Discover easy-to-follow tutorials, in-depth guides, and time-saving shortcuts for beginners and professionals alike. Boost your coding skills and tech knowledge today!\"\n      />\n      <div className=\"blog-page-title\">\n        <h1>Sharing my knowledge</h1>\n        <p style={{ marginTop: \"-2.5vw\" }}>\n          Some of the best hacks, tips, and tricks for developers\n        </p>\n        <div className=\"search-bar\">\n          <Block\n            display=\"flex\"\n            spacing={[0, 32]}\n            className=\"input-block-search\"\n          >\n            <Input\n              maxlength=\"30\"\n              placeholder=\"Search for a hack or topic...\"\n              onChange={({ target }: any) => setSearchTerm(target.value)}\n              icon=\"search\"\n            />\n          </Block>\n          <Block\n            display=\"flex\"\n            gap={32}\n            justifyContent=\"center\"\n            spacing={[0, 16]}\n          >\n            {[\"philosophy\", \"react\", \"microfrontend\"].map((category) => (\n              <Link\n                to={`/hacks/${category}`}\n                className={`category-heading ${\n                  pageType === category && \"active\"\n                }`}\n                key={category}\n              >\n                {category}\n              </Link>\n            ))}\n          </Block>\n        </div>\n      </div>\n      <div className=\"hacks\">\n        {hacks.map(\n          (\n            { frontmatter: { category, title, path, description, tags } }: any,\n            i: number,\n          ) => {\n            i = i + 1;\n            return (\n              <Link to={path} className={``} key={i}>\n                <div className=\"gradient\">\n                  <h4>{title}</h4>\n                  <div className=\"subtext text-subtext\">{description}</div>\n                  <Block display=\"flex\" gap={8} style={{ fontSize: 14 }}>\n                    <em>\n                      <b>Tags: </b>\n                      {tags.join(\", \")}\n                    </em>\n                  </Block>\n                </div>\n              </Link>\n            );\n          },\n        )}\n        {!hacks.length && (\n          <div className=\"not-found\">\n            <div className=\"man-emoji\">¯\\_(ツ)_/¯</div>\n            <div>Say that again? I'm pretty sure, we don't do that here.</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":["props","React","className","icon","Icon","color","name","SEO","_ref","title","description","image","article","pathname","useLocation","site","useStaticQuery","query","defaultTitle","defaultDescription","siteUrl","defaultImage","twitterUsername","siteMetadata","seo","url","Helmet","content","property","defaultProps","data","HacksTemplate","pageType","searchTerm","setSearchTerm","useState","hacks","allMdx","nodes","filter","_ref2","excerpt","frontmatter","tags","join","toLowerCase","indexOf","style","marginTop","Block","display","spacing","Input","maxlength","placeholder","onChange","_ref3","target","value","gap","justifyContent","map","category","Link","to","key","_ref4","i","path","fontSize","length"],"sourceRoot":""}