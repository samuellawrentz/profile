"use strict";(self.webpackChunksamuellawrentz_s_portfolio=self.webpackChunksamuellawrentz_s_portfolio||[]).push([[826],{8580:function(e,t,a){a.r(t),a.d(t,{default:function(){return h}});var n=a(1151),l=a(7294);function r(e){const t=Object.assign({p:"p",em:"em",strong:"strong",span:"span",a:"a"},(0,n.a)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,l.createElement(t.em,null,'"The art of simplicity is a puzzle of complexity."')," - Douglas Horton"),"\n",l.createElement(t.p,null,"In the realm of software engineering, the philosophy of ",l.createElement(t.strong,null,"Simplicity Over Complexity")," plays a vital role. This principle, an essential part of minimalistic software design, advocates for maintaining the simplicity of code, reducing cognitive load for developers, and enhancing maintainability."),"\n",l.createElement(t.p,null,"Consider an example:"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<deckgo-highlight-code language="javascript"  >\n          <code slot="code">// Complex code\nfunction calculateSalary(employee) {\n    if(employee.type === &#39;fulltime&#39;) {\n        return employee.hoursWorked * employee.hourlyRate;\n    } else if(employee.type === &#39;parttime&#39;) {\n        return employee.hoursWorked * employee.hourlyRate * 0.5;\n    }\n}\n\n// Simplified code\nfunction calculateSalary(employee) {\n    let rate = employee.type === &#39;fulltime&#39; ? 1 : 0.5;\n    return employee.hoursWorked * employee.hourlyRate * rate;\n}</code>\n        </deckgo-highlight-code>'}}),"\n",l.createElement(t.p,null,"The simplified code is easier to understand, maintain, and less prone to errors. This embodies the concept of simplicity over complexity."),"\n",l.createElement(t.p,null,"Minimalism in software design is not just about writing less code. It's also about ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/vim-experience-nvim-dev-experience/"},"creating simpler architecture"),", ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/gatsby-incremental-faster-builds-github-actions/"},"increasing build speeds"),", and ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/computed-state-in-react"},"using computed state in React"),", among others."),"\n",l.createElement(t.p,null,"Following ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/coding-standards-husky-typescript-lint-staged"},"coding standards")," and ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/bookmarklets/"},"utilizing bookmarklets")," can help maintain simplicity. Monitoring ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/monitor-website-pagespeed-with-googlesheets/"},"website pagespeed")," and using ",l.createElement(t.a,{href:"https://samuellawrentz.com/blog/jira-git-commit-workflow-vscode-extension/"},"Jira git commit workflow")," can also contribute to a minimalist approach."),"\n",l.createElement(t.p,null,l.createElement(t.em,null,'"Simplicity is the soul of efficiency."')," - Austin Freeman"),"\n",l.createElement(t.p,null,"In conclusion, simplicity over complexity is a philosophy that encourages minimalism in software design, making software systems more maintainable, efficient, and reliable."),"\n",l.createElement(t.p,null,"Embrace simplicity. Master Minimalism. Happy Coding!"))}var i=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,n.a)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},o=a(4160),s=a(2092),m=a(6243),c=a(4021),p=a(9202),d=a(9043);const u={};function g(e){(0,l.useEffect)((()=>{(0,p.q)()}),[]);const t=(0,d.u)(e.data.mdx.frontmatter.title,e.pageContext.nodes.length);return l.createElement("div",{className:"blog-content"},l.createElement(s.Z,{title:e.data.mdx.frontmatter.title,description:e.data.mdx.frontmatter.description,image:`/og-images/${e.data.mdx.frontmatter.path.replace(/[/-]/gi,"")}.png`,article:!0}),l.createElement("h1",null,e.data.mdx.frontmatter.title),l.createElement(m.g,{className:"tags",spacing:[0]},e.data.mdx.frontmatter.tags.map((e=>l.createElement("div",{className:"tag",key:e},e)))),l.createElement(m.g,{className:"hacks-cont text-regular",spacing:[72]},l.createElement(n.Z,{components:u},l.createElement("div",null,e.children))),l.createElement(c.do,{config:{alignment:"left",color:"social",enabled:!0,font_size:16,hide_desktop:!1,labels:"counts",language:"en",min_count:0,networks:["linkedin","facebook","twitter","pinterest","email","whatsapp"],padding:12,radius:4,show_total:!0,show_mobile:!0,show_toggle:!0,size:48,top:160,url:`https://samuellawrentz.com${e.data.mdx.frontmatter.path}`,description:e.data.mdx.frontmatter.description,title:e.data.mdx.frontmatter.title,message:`Check out this hack by Samuel Lawrentz - ${e.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${e.data.mdx.frontmatter.path}`,subject:`Samuel Lawrentz Hacks - ${e.data.mdx.frontmatter.title}`,username:"samuellawrentz"}}),l.createElement(m.g,{spacing:[32]},l.createElement("h3",{className:"hacks-cont"},"Explore more articles"),l.createElement("ul",null,t.map((t=>{const a=e.pageContext.nodes[t];return l.createElement("li",{key:t},l.createElement(o.rU,{to:a.frontmatter.path,className:"gradient"},l.createElement("div",null,a.frontmatter.title)))})))),l.createElement(m.g,{spacing:[32]},"Keep experimenting and happy coding! You can find me at"," ",l.createElement("a",{href:"https://x.com/samuellawrentz"}," @samuellawrentz")," on X."))}function h(e){return l.createElement(g,e,l.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-templates-hacks-tsx-content-file-path-hacks-philosophy-simplicity-over-complexity-the-essence-of-minimalism-in-software-design-hack-mdx-11453a1407c9557956ea.js.map