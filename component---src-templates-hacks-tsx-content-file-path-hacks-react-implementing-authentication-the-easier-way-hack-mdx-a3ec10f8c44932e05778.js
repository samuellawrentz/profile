"use strict";(self.webpackChunksamuellawrentz_s_portfolio=self.webpackChunksamuellawrentz_s_portfolio||[]).push([[9762],{2107:function(e,t,n){n.r(t),n.d(t,{default:function(){return g}});var a=n(1151),r=n(7294);function o(e){const t=Object.assign({p:"p",h2:"h2",span:"span",code:"code",a:"a"},(0,a.a)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.p,null,'"Any fool can write code that a computer can understand. Good programmers write code that humans can understand." - Martin Fowler. With this idea in our minds, let\'s simplify the process of implementing authentication in React applications.'),"\n",r.createElement(t.h2,null,"Understanding Authentication"),"\n",r.createElement(t.p,null,"Authentication is a critical aspect of any application. It ensures that only authorized users can access specific functionalities of your app. There are several methods to implement this, but we are going to focus on a straightforward approach."),"\n",r.createElement(t.h2,null,"Implementing Authentication"),"\n",r.createElement(t.p,null,"In React, we can implement authentication using Context API and hooks."),"\n",r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<deckgo-highlight-code language="javascript"  >\n          <code slot="code">import React, { createContext, useContext, useState } from &#39;react&#39;;\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const value = {\n    currentUser,\n    setCurrentUser,\n  };\n\n  return (\n    &lt;AuthContext.Provider value={value}&gt;\n      {children}\n    &lt;/AuthContext.Provider&gt;\n  );\n}</code>\n        </deckgo-highlight-code>'}}),"\n",r.createElement(t.p,null,"In the above code, we create an ",r.createElement(t.code,null,"AuthContext")," and two handy functions: ",r.createElement(t.code,null,"useAuth")," and ",r.createElement(t.code,null,"AuthProvider"),". You can check more about Context API and hooks from ",r.createElement(t.a,{href:"https://samuellawrentz.com/hacks/react/setting-initial-state-with-usestate"},"here"),"."),"\n",r.createElement(t.h2,null,"Using the Authentication"),"\n",r.createElement(t.p,null,"With the AuthProvider set up, wrap it around your application in the main component. Now, you can access the current user and the ",r.createElement(t.code,null,"setCurrentUser")," function anywhere in your app using the ",r.createElement(t.code,null,"useAuth")," hook."),"\n",r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<deckgo-highlight-code language="javascript"  >\n          <code slot="code">import { useAuth } from &#39;./AuthProvider&#39;;\n...\nconst {currentUser, setCurrentUser} = useAuth();</code>\n        </deckgo-highlight-code>'}}),"\n",r.createElement(t.p,null,"In the above code, ",r.createElement(t.code,null,"useAuth")," allows us to access the current user and the ",r.createElement(t.code,null,"setCurrentUser")," function anywhere in our app."),"\n",r.createElement(t.h2,null,"Conclusion"),"\n",r.createElement(t.p,null,'And there you have it! A straightforward way to implement authentication in your React applications. Remember, the key to good software is simplicity and readability. As Edsger Dijkstra once said, "Simplicity is prerequisite for reliability."'),"\n",r.createElement(t.p,null,"For additional insights on coding standards, check out this ",r.createElement(t.a,{href:"https://samuellawrentz.com/blog/coding-standards-husky-typescript-lint-staged"},"blog post"),". For more React hacks, be sure to explore other posts on this ",r.createElement(t.a,{href:"https://samuellawrentz.com/hacks/react/mapping-arrays-to-jsx-elements"},"site"),"."),"\n",r.createElement(t.p,null,"Happy coding!"))}var l=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.a)(),e.components);return t?r.createElement(t,e,r.createElement(o,e)):o(e)},c=n(4160),s=n(2092),i=n(6243),u=n(4021),m=n(9202),d=n(9043);const h={};function p(e){(0,r.useEffect)((()=>{(0,m.q)()}),[]);const t=(0,d.u)(e.data.mdx.frontmatter.title,e.pageContext.nodes.length);return r.createElement("div",{className:"blog-content"},r.createElement(s.Z,{title:e.data.mdx.frontmatter.title,description:e.data.mdx.frontmatter.description,image:`/og-images/${e.data.mdx.frontmatter.path.replace(/[/-]/gi,"")}.png`,article:!0}),r.createElement("h1",null,e.data.mdx.frontmatter.title),r.createElement(i.g,{className:"tags",spacing:[0]},e.data.mdx.frontmatter.tags.map((e=>r.createElement("div",{className:"tag",key:e},e)))),r.createElement(i.g,{className:"hacks-cont text-regular",spacing:[72]},r.createElement(a.Z,{components:h},r.createElement("div",null,e.children))),r.createElement(u.do,{config:{alignment:"left",color:"social",enabled:!0,font_size:16,hide_desktop:!1,labels:"counts",language:"en",min_count:0,networks:["linkedin","facebook","twitter","pinterest","email","whatsapp"],padding:12,radius:4,show_total:!0,show_mobile:!0,show_toggle:!0,size:48,top:160,url:`https://samuellawrentz.com${e.data.mdx.frontmatter.path}`,description:e.data.mdx.frontmatter.description,title:e.data.mdx.frontmatter.title,message:`Check out this hack by Samuel Lawrentz - ${e.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${e.data.mdx.frontmatter.path}`,subject:`Samuel Lawrentz Hacks - ${e.data.mdx.frontmatter.title}`,username:"samuellawrentz"}}),r.createElement(i.g,{spacing:[32]},r.createElement("h3",{className:"hacks-cont"},"Explore more articles"),r.createElement("ul",null,t.map((t=>{const n=e.pageContext.nodes[t];return r.createElement("li",{key:t},r.createElement(c.rU,{to:n.frontmatter.path,className:"gradient"},r.createElement("div",null,n.frontmatter.title)))})))),r.createElement(i.g,{spacing:[32]},"Keep experimenting and happy coding! You can find me at"," ",r.createElement("a",{href:"https://x.com/samuellawrentz"}," @samuellawrentz")," on X."))}function g(e){return r.createElement(p,e,r.createElement(l,e))}}}]);
//# sourceMappingURL=component---src-templates-hacks-tsx-content-file-path-hacks-react-implementing-authentication-the-easier-way-hack-mdx-a3ec10f8c44932e05778.js.map