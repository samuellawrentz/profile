{"version":3,"file":"component---src-templates-hacks-tsx-content-file-path-hacks-neovim-neovim-configuration-showdown-best-practices-for-optimizing-your-setup-hack-mdx-1f0f94ee185f7e969ab6.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./hacks/neovim/neovim-configuration-showdown-best-practices-for-optimizing-your-setup/hack.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    span: \"span\",\n    code: \"code\",\n    h3: \"h3\",\n    hr: \"hr\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Neovim Configuration Showdown - Best Practices for Optimizing Your Setup\"), \"\\n\", React.createElement(_components.p, null, \"Neovim is a hyperextensible text editor based on Vim's philosophies. It is designed to enable efficient text editing, a key skill for any developer. This post will delve into the best practices for optimizing your Neovim setup.\"), \"\\n\", React.createElement(_components.h2, null, \"Understanding Neovim\"), \"\\n\", React.createElement(_components.p, null, \"Before we jump into optimizing Neovim, let's understand the basics. Neovim aims to simplify Vim's user interface, improve extensibility, and reduce technical debt.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"shell\\\"  >\\n          <code slot=\\\"code\\\"># To install Neovim\\nsudo apt-get install neovim</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Neovim Configuration Files\"), \"\\n\", React.createElement(_components.p, null, \"Neovim looks for configuration files in specific locations. The primary file is \", React.createElement(_components.code, null, \"init.vim\"), \" located at \", React.createElement(_components.code, null, \"~/.config/nvim/init.vim\"), \".\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; This is a comment in the Neovim configuration file\\nset number &quot; This will enable line numbers</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Neovim Plugin Management\"), \"\\n\", React.createElement(_components.p, null, \"Plugins extend Neovim's functionality. One of the most popular plugin managers is \", React.createElement(_components.code, null, \"vim-plug\"), \".\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; Specify the start and end of the plugins\\ncall plug#begin(&#39;~/.vim/plugged&#39;)\\n\\nPlug &#39;user/plugin&#39; &quot; Plugin from GitHub\\n\\ncall plug#end()</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Best Practices for Optimizing Your Setup\"), \"\\n\", React.createElement(_components.h3, null, \"Keep Your \", React.createElement(_components.code, null, \".vimrc\"), \" Clean\"), \"\\n\", React.createElement(_components.p, null, \"A clean configuration file is easier to maintain and debug. Organize it by sections like general, plugins, key mappings, etc.\"), \"\\n\", React.createElement(_components.h3, null, \"Use a Plugin Manager\"), \"\\n\", React.createElement(_components.p, null, \"A plugin manager like \", React.createElement(_components.code, null, \"vim-plug\"), \" allows you to manage plugins seamlessly.\"), \"\\n\", React.createElement(_components.h3, null, \"Map Keys Intelligently\"), \"\\n\", React.createElement(_components.p, null, \"Key mappings improve your efficiency drastically. Map keys that are easy to reach and remember.\"), \"\\n\", React.createElement(_components.h3, null, \"Customize to Your Liking\"), \"\\n\", React.createElement(_components.p, null, \"Neovim is highly customizable. Tailor it to suit your workflow.\"), \"\\n\", React.createElement(_components.h3, null, \"Keep Learning\"), \"\\n\", React.createElement(_components.p, null, \"The learning curve for Neovim can be steep, but the payoff is high. Keep learning and experimenting with different configurations.\"), \"\\n\", React.createElement(_components.h2, null, \"Wrapping Up\"), \"\\n\", React.createElement(_components.p, null, \"Optimizing your Neovim setup can drastically improve your productivity. Customize it to your liking, keep your configuration files clean, use a plugin manager, and map keys intelligently.\"), \"\\n\", React.createElement(_components.p, null, \"Remember, \\\"Productivity is never an accident. It is always the result of a commitment to excellence, intelligent planning, and focused effort.\\\" - Paul J. Meyer.\"), \"\\n\", React.createElement(_components.p, null, \"Happy coding!\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"With this knowledge, you should be well on your way to becoming a Neovim power user. Keep exploring, keep optimizing, and remember, the only limit is your imagination.\"), \"\\n\", React.createElement(_components.p, null, \"Keep an eye on future posts for more tips and tricks to level up your Neovim game.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"Note: The code snippets provided in this blog post are written in the Vim scripting language. This language is used for scripting Vim and Neovim.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/hacks/neovim/neovim-configuration-showdown-best-practices-for-optimizing-your-setup/hack.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport \"./blog.scss\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {};\nfunction Hack(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: props.data.mdx.frontmatter.title,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag))), React.createElement(Block, {\n    className: \"hacks-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this hack by Samuel Lawrentz - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      subject: `Samuel Lawrentz Hacks - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Keep experimenting and happy coding! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"));\n}\nHack\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Hack, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4180202813\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","span","code","h3","hr","em","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","Hack","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Block","spacing","tags","map","tag","key","MDXProvider","children","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","i","randomPost","Link","to","href","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}