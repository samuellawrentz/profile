{"version":3,"file":"component---src-pages-projects-pasttenser-index-tsx-bd95becba9d5a59f1fcc.js","mappings":"sMAYA,SAASA,EAAMC,GAA2E,IAA1E,KAACC,EAAO,UAAS,KAAEC,EAAK,UAAS,SAAEC,EAAQ,SAAEC,KAAaC,GAAaL,EACrF,OACEM,EAAAA,cAAA,OAAAC,OAAAC,OAAA,CAAMC,UAAW,CAAC,SAAW,UAASR,IAAS,UAASC,IAAS,WAASE,EAAW,WAAY,KAAMM,KAAK,MAAUL,GAAQF,EAElI,CAEO,MAAMQ,EAAaC,IAAA,IAAC,GAACC,EAAE,OAAEC,EAAM,UAAEL,KAAcJ,GAAWO,EAAA,OAAKN,EAAAA,cAACS,EAAAA,GAAI,CAACF,GAAIA,EAAIJ,UAAW,eAAiBA,EAAWK,OAAQA,GAAQR,EAAAA,cAACP,EAAWM,GAAuB,EAC9K,K,+CCNA,IATA,SAAeA,GACb,OACEC,EAAAA,cAAA,OAAKG,UAAU,iBACZJ,EAAMW,MAAQV,EAAAA,cAACW,EAAAA,EAAI,CAACC,MAAM,WAAWC,KAAMd,EAAMW,KAAMP,UAAU,YAClEH,EAAAA,cAAA,QAAWD,GAGjB,C,oFCAA,MAAMe,EAAW,CACfC,OAAQ,wCACRC,KAAM,yDACNC,MAAO,4CAoDT,UAjDA,WACE,MAAM,EAACC,EAAM,EAAEC,IAAaC,EAAAA,EAAAA,UAAS,OAC/B,EAACC,EAAI,EAAEC,IAAWF,EAAAA,EAAAA,UAAS,IACjC,IAAIG,EAAa,KACdF,EAAKG,MAAM,gBAAeD,EAAQT,EAASG,OAC3CI,EAAKG,MAAM,SAAQD,EAAQT,EAASC,QACpCM,EAAKI,OAAS,KAAIF,EAAQT,EAASE,KAAKU,QAAQ,WAAYL,IAE/D,MAAMM,EAAYA,KAAM,OAACJ,GAASK,MAAM,oCAlBXC,EAkBsER,EAjB5FQ,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,KAiBqDC,MAAKC,GAAOA,EAAIC,SAAQF,MAAKG,GAAOjB,EAAUiB,EAAI,iBAlB9J,IAA+BP,CAkB8I,EAE3K,OACE7B,EAAAA,cAAA,WACEA,EAAAA,cAACqC,EAAAA,EAAK,CAACC,QAAQ,OAAQC,WAAW,SAASpC,UAAU,kBACnDH,EAAAA,cAACqC,EAAAA,EAAK,CAACG,KAAK,UAAUC,MAAO,CAACC,SAAU,aACxC1C,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,UAAI,oEACJA,EAAAA,cAACqC,EAAAA,EAAK,CAACC,QAAQ,OAAOK,QAAS,CAAC,EAAG,IAAKxC,UAAU,eAAcH,EAAAA,cAAC4C,EAAAA,EAAK,CAACC,UAAU,KAAKC,YAAY,eAAeC,MAAO1B,EAAM2B,WAAaC,GAA0B,KAAfA,EAAEC,UAAmBvB,IAAawB,SAAUzD,IAAmB,IAAlB,OAACc,GAAYd,EAC9M4B,EAAQd,EAAOuC,OACf5B,EAAU,KAAK,IACbnB,EAAAA,cAACP,EAAAA,EAAM,CAAC2D,QAASzB,EAAW7B,WAAYyB,GAAO,SACnDvB,EAAAA,cAAA,OAAKG,UAAU,cAAcoB,IAE7BvB,EAAAA,cAACqC,EAAAA,EAAK,CAACG,KAAK,UAAUrC,UAAY,UAAQe,EAAQ,OAAQ,KACtDlB,EAAAA,cAACqD,EAAAA,EAAW,CAACC,IAAI,4CAA4CC,IAAI,aAAaC,MAAM,OAAMC,YAAAC,EAAA,QAC1F1D,EAAAA,cAACqD,EAAAA,EAAW,CAACC,IAAI,4CAA4CC,IAAI,aAAaC,MAAM,QAAOC,YAAAC,EAAA,QAC3F1D,EAAAA,cAAA,OAAKG,UAAY,WAASe,EAAU,GAAG,SAAWA,KAG1DlB,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,SAAG,uNACmEA,EAAAA,cAAA,WAAMA,EAAAA,cAAA,QAAMG,UAAU,gBAAe,mFACzGH,EAAAA,cAAA,WAAMA,EAAAA,cAAA,QAAMG,UAAU,gBAAe,4EACrCH,EAAAA,cAAA,WAAMA,EAAAA,cAAA,QAAMG,UAAU,gBAAe,wHAEvCH,EAAAA,cAAA,SAAG,yCAAsCA,EAAAA,cAAA,SAAG,eAAe,0HAG7DA,EAAAA,cAAA,OAAKG,UAAU,iBACbH,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,SAAGA,EAAAA,cAAA,SAAG,mBAAmB,kDAA+CA,EAAAA,cAAA,WACxEA,EAAAA,cAAA,SAAG,qBAAqB,uCAAoCA,EAAAA,cAAA,WAC5DA,EAAAA,cAAA,SAAG,gBAAgB,YAKzB,C","sources":["webpack://samuellawrentz-s-portfolio/./src/components/button/index.tsx","webpack://samuellawrentz-s-portfolio/./src/components/input/index.tsx","webpack://samuellawrentz-s-portfolio/./src/pages/projects/pasttenser/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport React, { ReactNode } from 'react'\nimport './index.scss'\n\ninterface Prop {\n    children: ReactNode,\n    type?: string,\n    size?: string,\n    disabled?: boolean,\n    onClick?: any,\n}\n\nfunction Button({type = \"primary\", size=\"regular\", children, disabled, ...props} : Prop) {\n  return (\n    <span className={['button', `button-${type}`, `button-${size}`, `button-${disabled ? 'disabled': ''}`].join(' ')} {...props}>{children}</span>\n  )\n}\n\nexport const LinkButton = ({to, target, className, ...props}: any) => <Link to={to} className={\"link-button \" + className} target={target}><Button {...props}></Button></Link>\nexport default Button","import React from 'react'\nimport { Icon } from '../icon'\nimport './index.scss'\n\nfunction Input(props: any) {\n  return (\n    <div className='input-wrapper'>\n      {props.icon && <Icon color=\"surface2\" name={props.icon} className=\"sl-icon\"/>}\n      <input {...props} />\n    </div>\n  )\n}\n\nexport default Input","import { StaticImage } from 'gatsby-plugin-image'\nimport React, { useState } from 'react'\nimport { Block } from '../../../components/block'\nimport Button from '../../../components/button'\nimport Input from '../../../components/input'\nimport './index.scss'\n\nfunction capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst errorMap = {\n  spaces: 'Do verbs have spaces? ðŸ¤¨ You are sus.',\n  long: 'Is there a verb that really goes like - \"{{verb}}\"? ðŸ¤¯',\n  other: 'We dont do that here! #wakandaForever ðŸ™…'\n}\n\nfunction PastTenser() {\n  const [result, setResult] = useState(null)\n  const [verb, setVerb] = useState('')\n  let error: any = null\n  if(verb.match(/[^A-Za-z]/g)) error = errorMap.other\n  if(verb.match(/\\s/g)) error = errorMap.spaces\n  if(verb.length > 20) error = errorMap.long.replace('{{verb}}', verb)\n\n  const fetchData = () => !error && fetch('https://pastenser.herokuapp.com/' + capitalizeFirstLetter(verb)).then(res => res.json()).then(val => setResult(val['past tense']))\n  \n  return (\n    <div>\n      <Block display='flex'  alignItems='center' className='khabyl-project'>\n        <Block flex='1 1 70%' style={{position: 'relative'}}>\n        <h1>PastTenser</h1>\n        <h2>A quick API that gives you the past tense of the requested verb.</h2>\n        <Block display='flex' spacing={[0, 32]} className='input-block'><Input maxlength=\"30\" placeholder=\"Enter a verb\" value={verb} onKeyPress={(e: any) => e.charCode === 13 && fetchData()} onChange={({target}: any) => {\n          setVerb(target.value)\n          setResult(null)\n        }}/><Button onClick={fetchData} disabled={!!error}>Find</Button></Block>\n        <div className=\"error-text\">{error}</div>\n        </Block>\n        <Block flex='1 0 30%' className={`khaby ${result? 'show': ''}`}>\n            <StaticImage src='../../../images/projects/khaby-lame 1.png' alt=\"Khaby Lame\" class=\"open\" />\n            <StaticImage src='../../../images/projects/khaby-lame 2.png' alt=\"Khaby Lame\" class=\"close\"/>\n            <div className={`result ${result ? ``: 'hide'}`}>{result}</div>\n        </Block>\n    </Block>\n    <div className=\"khaby-section\">\n      <h3>How does it work?</h3>\n      <p>It's very simple. In fact, it is a normal Javascript map lookup. The backend for this is written in NodeJS with ExpressJS and hosted on Heroku.\n        It's an API that I developed just for fun so you can use it for fun.<br /><span className='text-caption'>Additional fact #1: This API also returns the past-participle form of the verb.</span>\n        <br /><span className='text-caption'>Additional fact #2: This API is not accurate. Don't rely on the results.</span>\n        <br /><span className='text-caption'>Additional fact #3: Now that Heroku is going to stop free plans, I need to think about deploying the API elsewhere.</span>\n        </p>\n      <p>As you know, the image I used here is <b>Khaby Lame.</b> He is just awesome for his quirky parody videos. \n        I find his facial expressions funny and useful in a page like this.</p>\n    </div>\n    <div className=\"khaby-section\">\n      <h3>Lets Get Technical</h3>\n      <p><b>CSS properties:</b> clip-path, keyframes, transform - skew, rotate<br />\n      <b>Javascript Stack:</b> NodeJS, React, ExpressJS, Fetch API<br />\n      <b>Deployed to:</b> Heroku\n      </p>\n    </div>\n    </div>\n  )\n}\n\nexport default PastTenser"],"names":["Button","_ref","type","size","children","disabled","props","React","Object","assign","className","join","LinkButton","_ref2","to","target","Link","icon","Icon","color","name","errorMap","spaces","long","other","result","setResult","useState","verb","setVerb","error","match","length","replace","fetchData","fetch","string","charAt","toUpperCase","slice","then","res","json","val","Block","display","alignItems","flex","style","position","spacing","Input","maxlength","placeholder","value","onKeyPress","e","charCode","onChange","onClick","StaticImage","src","alt","class","__imageData","require"],"sourceRoot":""}