{"version":3,"file":"component---src-templates-hacks-tsx-content-file-path-hacks-react-understanding-and-using-context-api-hack-mdx-6800f47cd836623c9ebd.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./hacks/react/understanding-and-using-context-api/hack.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"\\\"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\\\" â€” Martin Fowler.\"), \"\\n\", React.createElement(_components.p, null, \"When it comes to state management in React, Context API is a game changer. It provides a way to pass data through the component tree without having to pass props down manually at every level, a concept known as \\\"prop drilling\\\".\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"javascript\\\"  >\\n          <code slot=\\\"code\\\">import React, { createContext, useState } from &quot;react&quot;;\\n\\n// Create a Context\\nconst MyContext = createContext();\\n\\n// Create a Provider Component\\nexport const MyProvider = props =&gt; {\\n  const [state, setState] = useState(0);\\n\\n  return (\\n    &lt;MyContext.Provider value={[state, setState]}&gt;\\n      {props.children}\\n    &lt;/MyContext.Provider&gt;\\n  );\\n};\\n\\nexport default MyContext;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The above code sets up a simple Context API, where \", React.createElement(_components.code, null, \"MyProvider\"), \" is a provider component wrapping the children that will need access to the context. The \", React.createElement(_components.code, null, \"value\"), \" prop on \", React.createElement(_components.code, null, \"MyContext.Provider\"), \" is the value that will be available to all children components.\"), \"\\n\", React.createElement(_components.p, null, \"Using the Context in a child component is straightforward. Import the context, and use the \", React.createElement(_components.code, null, \"useContext\"), \" hook to access the state and the \", React.createElement(_components.code, null, \"setState\"), \" function.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"javascript\\\"  >\\n          <code slot=\\\"code\\\">import React, { useContext } from &quot;react&quot;;\\nimport MyContext from &quot;./MyContext&quot;;\\n\\nconst ChildComponent = () =&gt; {\\n  const [state, setState] = useContext(MyContext);\\n\\n  return (\\n    &lt;div&gt;\\n      &lt;p&gt;{state}&lt;/p&gt;\\n      &lt;button onClick={() =&gt; setState(state + 1)}&gt;Increase&lt;/button&gt;\\n    &lt;/div&gt;\\n  );\\n};</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"In this example, we're importing the context and using the \", React.createElement(_components.code, null, \"useContext\"), \" hook to get the state and the \", React.createElement(_components.code, null, \"setState\"), \" function. We can then use these in our component as we would with local state.\"), \"\\n\", React.createElement(_components.p, null, \"Context API is an efficient and scalable way to manage state in large React applications. It allows you to avoid prop drilling and keep your codebase more readable and maintainable. If you're interested in learning more about state management and other React topics, check out these posts on \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/computed-state-in-react\"\n  }, \"Computed State\"), \" and \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/coding-standards-husky-typescript-lint-staged\"\n  }, \"Coding Standards\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Remember, understanding and properly implementing the Context API can take your React applications to the next level. As the famous quote goes, \\\"Simplicity is the soul of efficiency\\\" - Austin Freeman.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/hacks/react/understanding-and-using-context-api/hack.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport \"./blog.scss\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {};\nfunction Hack(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: props.data.mdx.frontmatter.title,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag))), React.createElement(Block, {\n    className: \"hacks-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this hack by Samuel Lawrentz - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      subject: `Samuel Lawrentz Hacks - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Keep experimenting and happy coding! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"));\n}\nHack\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Hack, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4180202813\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","code","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","Hack","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Block","spacing","tags","map","tag","key","MDXProvider","children","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","i","randomPost","Link","to","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}