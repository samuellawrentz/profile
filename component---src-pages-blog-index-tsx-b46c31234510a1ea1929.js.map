{"version":3,"file":"component---src-pages-blog-index-tsx-b46c31234510a1ea1929.js","mappings":"sKAaA,IATA,SAAeA,GACb,OACEC,EAAAA,cAAA,OAAKC,UAAU,iBACZF,EAAMG,MAAQF,EAAAA,cAACG,EAAAA,EAAI,CAACC,MAAM,WAAWC,KAAMN,EAAMG,KAAMD,UAAU,YAClED,EAAAA,cAAA,QAAWD,GAGjB,C,8FCuFA,UAxFA,SAAaO,GAAgB,IAAf,KAAEC,GAAWD,EACzB,MAAM,EAACE,EAAU,EAAEC,IAAiBC,EAAAA,EAAAA,UAAS,IACvCC,EAAQJ,EAAKK,OAAOC,MAAMC,QAC9BC,IAAA,IAAC,QAAEC,EAASC,aAAa,MAAEC,EAAK,YAAEC,EAAW,KAAEC,IAAaL,EAAA,OAGhB,IAFzC,GAAEC,KAAWE,KAASC,KAAeC,EAAKC,KAAK,OAC7CC,cACAC,QAAQf,EAAWc,cAAqB,IAE/C,OACEtB,EAAAA,cAAA,WACEA,EAAAA,cAACwB,EAAAA,EAAG,CACFN,MAAM,wDACNC,YAAY,2IAEdnB,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAACyB,EAAAA,EAAK,CACJC,QAAQ,OACRC,QAAS,CAAC,EAAG,IACb1B,UAAU,sBAEVD,EAAAA,cAAC4B,EAAAA,EAAK,CACJC,UAAU,KACVC,YAAY,gCACZC,SAAUC,IAAA,IAAC,OAAEC,GAAaD,EAAA,OAAKvB,EAAcwB,EAAOC,MAAM,EAC1DhC,KAAK,cAKbF,EAAAA,cAAA,OAAKC,UAAU,mBACZU,EAAMwB,KACL,CAAAC,EAKEC,KACG,IALH,QACErB,EACAC,aAAa,KAAEqB,EAAI,MAAEpB,EAAK,KAAEqB,EAAI,UAAEC,EAAS,YAAErB,EAAW,KAAEC,IACtDgB,EAIN,OADAC,GAAQ,EAENrC,EAAAA,cAACyC,EAAAA,GAAI,CAACC,GAAIH,EAAMtC,UAAY,GAAG0C,IAAKN,GAClCrC,EAAAA,cAAA,OAAKC,UAAU,QACbD,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAC4C,EAAAA,EAAG,CAACC,MAAOL,EAAUM,gBAAgBD,MAAOE,IAAK7B,KAEpDlB,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,OAAKC,UAAU,gCAAgCqC,GAC/CtC,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,UAAKkB,MAEJmB,EAAI,GAAKA,EAAI,IACdrC,EAAAA,cAAA,OAAKC,UAAU,WACZkB,EAAY6B,OAAS,IAAMhC,EAAUG,GAG1CnB,EAAAA,cAACyB,EAAAA,EAAK,CACJC,QAAQ,OACRuB,IAAK,GACLC,WAAW,SACXjD,UAAU,YAEVD,EAAAA,cAAA,OAAKC,UAAU,QACZmB,EAAKe,KAAKgB,GACTnD,EAAAA,cAAA,OAAKC,UAAU,MAAM0C,IAAKQ,GACvBA,SAOR,KAIXxC,EAAMqC,QACNhD,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,aAAY,cAC3BD,EAAAA,cAAA,WAAK,6DAMjB,C","sources":["webpack://samuellawrentz-s-portfolio/./src/components/input/index.tsx","webpack://samuellawrentz-s-portfolio/./src/pages/blog/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Icon } from '../icon'\nimport './index.scss'\n\nfunction Input(props: any) {\n  return (\n    <div className='input-wrapper'>\n      {props.icon && <Icon color=\"surface2\" name={props.icon} className=\"sl-icon\"/>}\n      <input {...props} />\n    </div>\n  )\n}\n\nexport default Input","import { graphql, Link } from \"gatsby\";\nimport React, { useState } from \"react\";\n\nimport SEO from \"../../components/seo\";\nimport \"./index.scss\";\nimport Img from \"gatsby-image\";\nimport { Block } from \"../../components/block\";\nimport Input from \"../../components/input\";\nimport Button from \"../../components/button\";\n\nfunction Blog({ data }: any) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const blogs = data.allMdx.nodes.filter(\n    ({ excerpt, frontmatter: { title, description, tags } }: any) =>\n      `${excerpt}|${title}|${description}|${tags.join(\"|\")}`\n        .toLowerCase()\n        .indexOf(searchTerm.toLowerCase()) !== -1\n  );\n  return (\n    <div>\n      <SEO\n        title=\"Samuel Lawrentz - Tech Blog, Web development, CSS, JS\"\n        description=\"How I work with frontend stack and automate stuff to solve the problem of maintaining, modifying, and upgrading frontend technologies.\"\n      />\n      <div className=\"blog-page-title\">\n        <h1>THE BLOG </h1>\n        <div className=\"search-bar\">\n          <Block\n            display=\"flex\"\n            spacing={[0, 32]}\n            className=\"input-block-search\"\n          >\n            <Input\n              maxlength=\"30\"\n              placeholder=\"Search for a blog or topic...\"\n              onChange={({ target }: any) => setSearchTerm(target.value)}\n              icon=\"search\"\n            />\n          </Block>\n        </div>\n      </div>\n      <div className=\"blogs home-blog\">\n        {blogs.map(\n          (\n            {\n              excerpt,\n              frontmatter: { date, title, path, heroImage, description, tags },\n            }: any,\n            i: number\n          ) => {\n            i = i + 1;\n            return (\n              <Link to={path} className={``} key={i}>\n                <div className=\"card\">\n                  <div className=\"card__image\">\n                    <Img fluid={heroImage.childImageSharp.fluid} alt={title} />\n                  </div>\n                  <div className=\"card__details\">\n                    <div className=\"card__date text-regularLight\">{date}</div>\n                    <div className=\"card__title\">\n                      <h3>{title}</h3>\n                    </div>\n                    {!(i % 2 && i % 5) && (\n                      <div className=\"subtext\">\n                        {description.length > 150 ? excerpt : description}\n                      </div>\n                    )}\n                    <Block\n                      display=\"flex\"\n                      gap={48}\n                      alignItems=\"center\"\n                      className=\"date-tag\"\n                    >\n                      <div className=\"tags\">\n                        {tags.map((tag: any) => (\n                          <div className=\"tag\" key={tag}>\n                            {tag}\n                          </div>\n                        ))}\n                      </div>\n                    </Block>\n                  </div>\n                </div>\n              </Link>\n            );\n          }\n        )}\n        {!blogs.length && (\n          <div className=\"not-found\">\n            <div className=\"man-emoji\">¯\\_(ツ)_/¯</div>\n            <div>Say that again? I'm pretty sure, we don't do that here.</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Blog;\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 150)\n        frontmatter {\n          title\n          tags\n          description\n          date(formatString: \"DD MMM, YYYY\")\n          path\n          heroImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","React","className","icon","Icon","color","name","_ref","data","searchTerm","setSearchTerm","useState","blogs","allMdx","nodes","filter","_ref2","excerpt","frontmatter","title","description","tags","join","toLowerCase","indexOf","SEO","Block","display","spacing","Input","maxlength","placeholder","onChange","_ref3","target","value","map","_ref4","i","date","path","heroImage","Link","to","key","Img","fluid","childImageSharp","alt","length","gap","alignItems","tag"],"sourceRoot":""}