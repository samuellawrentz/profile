{"version":3,"file":"component---src-templates-hacks-tsx-content-file-path-hacks-neovim-understanding-neovim-how-to-customize-and-improve-your-text-editor-hack-mdx-6910018730bef2182929.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./hacks/neovim/understanding-neovim-how-to-customize-and-improve-your-text-editor/hack.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    h3: \"h3\",\n    span: \"span\",\n    a: \"a\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Understanding Neovim: How to Customize and Improve Your Text Editor\"), \"\\n\", React.createElement(_components.p, null, \"Neovim is a powerful, modernized version of the classic Vim text editor. It offers advanced features and extensibility, making it a favorite among developers. In this article, we'll explore how to customize Neovim to enhance your coding experience.\"), \"\\n\", React.createElement(_components.h2, null, \"1. Installing Plugins with \", React.createElement(_components.code, null, \"vim-plug\")), \"\\n\", React.createElement(_components.p, null, \"Neovim's functionality can be greatly extended using plugins. The \", React.createElement(_components.code, null, \"vim-plug\"), \" plugin manager simplifies plugin management.\"), \"\\n\", React.createElement(_components.h3, null, \"Installation\"), \"\\n\", React.createElement(_components.p, null, \"First, install \", React.createElement(_components.code, null, \"vim-plug\"), \" by running the following command:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"sh\\\"  >\\n          <code slot=\\\"code\\\">curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\\\\\nhttps://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Next, add the following lines to your \", React.createElement(_components.code, null, \"init.vim\"), \" file to configure \", React.createElement(_components.code, null, \"vim-plug\"), \":\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">call plug#begin(&#39;~/.vim/plugged&#39;)\\n\\n&quot; Add plugins here\\nPlug &#39;junegunn/fzf&#39;, { &#39;do&#39;: { -&gt; fzf#install() } }\\nPlug &#39;scrooloose/nerdtree&#39;\\nPlug &#39;tpope/vim-fugitive&#39;\\n\\ncall plug#end()</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Run \", React.createElement(_components.code, null, \":PlugInstall\"), \" in Neovim to install the specified plugins.\"), \"\\n\", React.createElement(_components.h2, null, \"2. Customizing Your Neovim Configuration\"), \"\\n\", React.createElement(_components.p, null, \"Neovim is highly configurable. The main configuration file, \", React.createElement(_components.code, null, \"init.vim\"), \", is located in \", React.createElement(_components.code, null, \"~/.config/nvim/\"), \". Here are some essential settings:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; Enable line numbers\\nset number\\n\\n&quot; Enable syntax highlighting\\nsyntax on\\n\\n&quot; Set indentation\\nset tabstop=4\\nset shiftwidth=4\\nset expandtab</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"3. Key Mappings for Efficiency\"), \"\\n\", React.createElement(_components.p, null, \"Custom key mappings can significantly improve your productivity. Add the following mappings to your \", React.createElement(_components.code, null, \"init.vim\"), \" to enhance navigation and editing:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; Remap space as leader key\\nlet mapleader = &quot;\\\\&lt;Space&gt;&quot;\\n\\n&quot; Quick save\\nnnoremap &lt;leader&gt;w :w&lt;CR&gt;\\n\\n&quot; Toggle NERDTree\\nnnoremap &lt;leader&gt;n :NERDTreeToggle&lt;CR&gt;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"4. Enhancing Neovim with LSP Support\"), \"\\n\", React.createElement(_components.p, null, \"Language Server Protocol (LSP) support in Neovim provides features like autocompletion and error checking. Install the \", React.createElement(_components.code, null, \"nvim-lspconfig\"), \" plugin:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">Plug &#39;neovim/nvim-lspconfig&#39;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Configure the LSP in your \", React.createElement(_components.code, null, \"init.vim\"), \":\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">lua &lt;&lt; EOF\\nrequire&#39;lspconfig&#39;.pyright.setup{}  -- Example for Python\\nEOF</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"5. Optimizing Performance\"), \"\\n\", React.createElement(_components.p, null, \"To ensure Neovim runs smoothly, consider these performance optimizations:\"), \"\\n\", React.createElement(_components.h3, null, \"Cache Plugin\"), \"\\n\", React.createElement(_components.p, null, \"Use the \", React.createElement(_components.code, null, \"impatient.nvim\"), \" plugin to cache Lua modules and reduce startup time:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">Plug &#39;lewis6991/impatient.nvim&#39;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Add the following to your \", React.createElement(_components.code, null, \"init.vim\"), \":\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">lua &lt;&lt; EOF\\nrequire(&#39;impatient&#39;)\\nEOF</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"Asynchronous Tasks\"), \"\\n\", React.createElement(_components.p, null, \"Neovim supports asynchronous tasks to improve performance. Use the \", React.createElement(_components.code, null, \"asyncrun.vim\"), \" plugin for running tasks asynchronously:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">Plug &#39;skywind3000/asyncrun.vim&#39;</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Run tasks without blocking the editor:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">:AsyncRun make</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Conclusion and Call-to-Action\"), \"\\n\", React.createElement(_components.p, null, \"Customizing Neovim can transform your development workflow. By installing plugins, configuring settings, and optimizing performance, you can tailor Neovim to your needs. Begin customizing your Neovim setup today and experience a more efficient and powerful text editor.\"), \"\\n\", React.createElement(_components.p, null, \"For more detailed guides and tips, visit our \", React.createElement(_components.a, {\n    href: \"https://neovim.io/doc/\"\n  }, \"Neovim tutorials\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"\\\"Good software, like wine, takes time.\\\" – Joel Spolsky\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"By following these customization tips, you'll unlock the true potential of Neovim. Happy coding!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/hacks/neovim/understanding-neovim-how-to-customize-and-improve-your-text-editor/hack.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport \"./blog.scss\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {};\nfunction Hack(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: props.data.mdx.frontmatter.title,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag))), React.createElement(Block, {\n    className: \"hacks-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this hack by Samuel Lawrentz - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      subject: `Samuel Lawrentz Hacks - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Keep experimenting and happy coding! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"));\n}\nHack\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Hack, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4180202813\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","code","h3","span","a","hr","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","Hack","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Block","spacing","tags","map","tag","key","MDXProvider","children","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","i","randomPost","Link","to","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}