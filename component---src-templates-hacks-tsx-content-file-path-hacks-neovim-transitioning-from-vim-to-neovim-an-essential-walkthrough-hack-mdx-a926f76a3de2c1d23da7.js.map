{"version":3,"file":"component---src-templates-hacks-tsx-content-file-path-hacks-neovim-transitioning-from-vim-to-neovim-an-essential-walkthrough-hack-mdx-a926f76a3de2c1d23da7.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./hacks/neovim/transitioning-from-vim-to-neovim-an-essential-walkthrough/hack.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    span: \"span\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    a: \"a\",\n    hr: \"hr\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"Transitioning from Vim to Neovim can seem daunting, but itâ€™s a move that brings numerous benefits. Neovim, a fork of Vim, offers enhanced extensibility and modern features while maintaining the core Vim experience. This guide will help you make a seamless transition from Vim to Neovim.\"), \"\\n\", React.createElement(_components.h2, null, \"Key Differences Between Vim and Neovim\"), \"\\n\", React.createElement(_components.h3, null, \"Enhanced Extensibility\"), \"\\n\", React.createElement(_components.p, null, \"One of Neovim's major advantages is its improved extensibility through a built-in terminal emulator and support for asynchronous plugins. This allows for more dynamic and responsive editor interactions.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"vim\\\"  >\\n          <code slot=\\\"code\\\">&quot; Example of an asynchronous plugin in Neovim\\nPlug &#39;neoclide/coc.nvim&#39;, {&#39;branch&#39;: &#39;release&#39;}</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"Lua Integration\"), \"\\n\", React.createElement(_components.p, null, \"Neovim introduces Lua as a first-class scripting language, providing a faster and more flexible way to configure and extend the editor.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"lua\\\"  >\\n          <code slot=\\\"code\\\">-- Example of Lua configuration in Neovim\\nvim.api.nvim_set_keymap(&#39;n&#39;, &#39;&lt;leader&gt;ff&#39;, &#39;:Telescope find_files&lt;CR&gt;&#39;, { noremap = true, silent = true })</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Transitioning Your Configuration\"), \"\\n\", React.createElement(_components.h3, null, \"Migrating \", React.createElement(_components.code, null, \".vimrc\"), \" to \", React.createElement(_components.code, null, \"init.vim\")), \"\\n\", React.createElement(_components.p, null, \"Your existing \", React.createElement(_components.code, null, \".vimrc\"), \" file is compatible with Neovim, but it should be renamed to \", React.createElement(_components.code, null, \"init.vim\"), \" and placed in the Neovim configuration directory:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"sh\\\"  >\\n          <code slot=\\\"code\\\">mv ~/.vimrc ~/.config/nvim/init.vim</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"Leveraging \", React.createElement(_components.code, null, \"init.lua\")), \"\\n\", React.createElement(_components.p, null, \"For those looking to tap into Neovim's full potential, transitioning to an \", React.createElement(_components.code, null, \"init.lua\"), \" configuration can unlock advanced features and performance improvements.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"lua\\\"  >\\n          <code slot=\\\"code\\\">-- Example init.lua configuration\\nrequire(&#39;plugins&#39;)\\nrequire(&#39;settings&#39;)\\nrequire(&#39;keymaps&#39;)</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Utilizing Neovim-Specific Plugins\"), \"\\n\", React.createElement(_components.p, null, \"Neovim has a growing ecosystem of plugins that leverage its unique features. Some popular Neovim-specific plugins include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Telescope:\"), \" A highly extendable fuzzy finder.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Tree-sitter:\"), \" For better syntax highlighting and code understanding.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"LSP (Language Server Protocol):\"), \" Provides IDE-like features.\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"lua\\\"  >\\n          <code slot=\\\"code\\\">-- Example of setting up LSP in Neovim\\nrequire&#39;lspconfig&#39;.pyright.setup{}</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Best Practices for a Smooth Transition\"), \"\\n\", React.createElement(_components.h3, null, \"Backup Your Vim Configuration\"), \"\\n\", React.createElement(_components.p, null, \"Before making any changes, ensure you backup your current Vim configuration. This will allow you to revert if necessary.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"sh\\\"  >\\n          <code slot=\\\"code\\\">cp ~/.vimrc ~/.vimrc.bak</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"Read Neovimâ€™s Documentation\"), \"\\n\", React.createElement(_components.p, null, \"Neovim's \", React.createElement(_components.a, {\n    href: \"https://neovim.io/doc/\"\n  }, \"official documentation\"), \" is a valuable resource. It provides in-depth information on new features and best practices.\"), \"\\n\", React.createElement(_components.h3, null, \"Join the Community\"), \"\\n\", React.createElement(_components.p, null, \"Engage with the Neovim community through forums, GitHub, and chat channels. The community is an excellent source for tips, troubleshooting, and discovering new plugins.\"), \"\\n\", React.createElement(_components.h2, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"Transitioning from Vim to Neovim is a step towards embracing a more modern and extensible text editing experience. By following this guide, you can ensure a smooth and efficient transition. Embrace the new features and enjoy enhanced productivity.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Call to Action:\"), \" Ready to make the switch? Download Neovim today and start exploring its powerful features. Visit the \", React.createElement(_components.a, {\n    href: \"https://neovim.io/\"\n  }, \"official Neovim website\"), \" to get started.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"Remember, transitioning to Neovim not only modernizes your workflow but also enhances your coding efficiency with its advanced capabilities.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"\\\"The best way to predict the future is to create it.\\\" - Peter Drucker\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Happy coding!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/hacks/neovim/transitioning-from-vim-to-neovim-an-essential-walkthrough/hack.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport \"./blog.scss\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {};\nfunction Hack(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: props.data.mdx.frontmatter.title,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag))), React.createElement(Block, {\n    className: \"hacks-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this hack by Samuel Lawrentz - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      subject: `Samuel Lawrentz Hacks - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Keep experimenting and happy coding! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"));\n}\nHack\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Hack, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4180202813\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","span","code","ul","li","strong","a","hr","blockquote","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","Hack","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Block","spacing","tags","map","tag","key","MDXProvider","children","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","i","randomPost","Link","to","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}