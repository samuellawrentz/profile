{"version":3,"file":"component---src-templates-hacks-tsx-content-file-path-hacks-philosophy-simplicity-over-complexity-the-essence-of-minimalism-in-software-design-hack-mdx-11453a1407c9557956ea.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./hacks/philosophy/simplicity-over-complexity-the-essence-of-minimalism-in-software-design/hack.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/hacks.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    span: \"span\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.em, null, \"\\\"The art of simplicity is a puzzle of complexity.\\\"\"), \" - Douglas Horton\"), \"\\n\", React.createElement(_components.p, null, \"In the realm of software engineering, the philosophy of \", React.createElement(_components.strong, null, \"Simplicity Over Complexity\"), \" plays a vital role. This principle, an essential part of minimalistic software design, advocates for maintaining the simplicity of code, reducing cognitive load for developers, and enhancing maintainability.\"), \"\\n\", React.createElement(_components.p, null, \"Consider an example:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"javascript\\\"  >\\n          <code slot=\\\"code\\\">// Complex code\\nfunction calculateSalary(employee) {\\n    if(employee.type === &#39;fulltime&#39;) {\\n        return employee.hoursWorked * employee.hourlyRate;\\n    } else if(employee.type === &#39;parttime&#39;) {\\n        return employee.hoursWorked * employee.hourlyRate * 0.5;\\n    }\\n}\\n\\n// Simplified code\\nfunction calculateSalary(employee) {\\n    let rate = employee.type === &#39;fulltime&#39; ? 1 : 0.5;\\n    return employee.hoursWorked * employee.hourlyRate * rate;\\n}</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The simplified code is easier to understand, maintain, and less prone to errors. This embodies the concept of simplicity over complexity.\"), \"\\n\", React.createElement(_components.p, null, \"Minimalism in software design is not just about writing less code. It's also about \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/vim-experience-nvim-dev-experience/\"\n  }, \"creating simpler architecture\"), \", \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/gatsby-incremental-faster-builds-github-actions/\"\n  }, \"increasing build speeds\"), \", and \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/computed-state-in-react\"\n  }, \"using computed state in React\"), \", among others.\"), \"\\n\", React.createElement(_components.p, null, \"Following \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/coding-standards-husky-typescript-lint-staged\"\n  }, \"coding standards\"), \" and \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/bookmarklets/\"\n  }, \"utilizing bookmarklets\"), \" can help maintain simplicity. Monitoring \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/monitor-website-pagespeed-with-googlesheets/\"\n  }, \"website pagespeed\"), \" and using \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/jira-git-commit-workflow-vscode-extension/\"\n  }, \"Jira git commit workflow\"), \" can also contribute to a minimalist approach.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"\\\"Simplicity is the soul of efficiency.\\\"\"), \" - Austin Freeman\"), \"\\n\", React.createElement(_components.p, null, \"In conclusion, simplicity over complexity is a philosophy that encourages minimalism in software design, making software systems more maintainable, efficient, and reliable.\"), \"\\n\", React.createElement(_components.p, null, \"Embrace simplicity. Master Minimalism. Happy Coding!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/hacks/philosophy/simplicity-over-complexity-the-essence-of-minimalism-in-software-design/hack.mdx\";\nimport React, {useEffect} from \"react\";\nimport {Link} from \"gatsby\";\nimport \"./blog.scss\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport {getNumbersFromString} from \"../components/utils\";\nconst components = {};\nfunction Hack(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  const postNumbers = getNumbersFromString(props.data.mdx.frontmatter.title, props.pageContext.nodes.length);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: props.data.mdx.frontmatter.title,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag))), React.createElement(Block, {\n    className: \"hacks-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this hack by Samuel Lawrentz - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      subject: `Samuel Lawrentz Hacks - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }), React.createElement(Block, {\n    spacing: [32]\n  }, React.createElement(\"h3\", {\n    className: \"hacks-cont\"\n  }, \"Explore more articles\"), React.createElement(\"ul\", null, postNumbers.map(i => {\n    const posts = props.pageContext.nodes;\n    const randomPost = posts[i];\n    return React.createElement(\"li\", {\n      key: i\n    }, React.createElement(Link, {\n      to: randomPost.frontmatter.path,\n      className: \"gradient\"\n    }, React.createElement(\"div\", null, randomPost.frontmatter.title)));\n  }))), React.createElement(Block, {\n    spacing: [32]\n  }, \"Keep experimenting and happy coding! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"));\n}\nHack\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Hack, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4180202813\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","span","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","Hack","useEffect","deckDeckGoHighlightElement","postNumbers","getNumbersFromString","data","mdx","frontmatter","title","pageContext","nodes","length","className","SEO","description","image","path","replace","article","Block","spacing","tags","map","tag","key","MDXProvider","children","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","i","randomPost","Link","to","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}