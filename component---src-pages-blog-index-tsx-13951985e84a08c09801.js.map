{"version":3,"file":"component---src-pages-blog-index-tsx-13951985e84a08c09801.js","mappings":"oNAoDA,UA3CA,SAAaA,GAAgB,IAAbC,EAAI,EAAJA,KACd,GAAoCC,EAAAA,EAAAA,UAAS,IAAtCC,EAAU,KAAEC,EAAa,KAC1BC,EAAQJ,EAAKK,OAAOC,MAAMC,QAAO,gBAAEC,EAAOC,EAAPD,QAAOC,EAAAA,EAAEC,YAAsC,OAAwH,KAAzGF,EAAO,IAAzC,EAALG,MAAuD,IAArC,EAAXC,YAA+D,IAA9C,EAAJC,KAA2DC,KAAK,MAAOC,cAAcC,QAAQd,EAAWa,cAAqB,IACjN,OACEE,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CAACP,MAAM,wDACfC,YAAY,2IAEZK,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,mBACbF,EAAAA,cAAAA,KAAAA,KAAI,aACJA,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,cACfF,EAAAA,cAACG,EAAAA,EAAK,CAACC,QAAQ,OAAOC,QAAS,CAAC,EAAG,IAAKH,UAAU,sBAAqBF,EAAAA,cAACM,EAAAA,EAAK,CAACC,UAAU,KAAKC,YAAY,gCAAgCC,SAAU,gBAAEC,EAAM,EAANA,OAAM,OAAWxB,EAAcwB,EAAOC,MAAM,EAAEC,KAAK,cAG1MZ,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,mBACVf,EAAM0B,KAAI,WAAiFC,GAAc,IAA7FvB,EAAOwB,EAAPxB,QAAOwB,EAAAA,EAAEtB,YAAcuB,EAAI,EAAJA,KAAMtB,EAAK,EAALA,MAAOuB,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWvB,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAE3E,OADFkB,GAAQ,EACCd,EAAAA,cAACmB,EAAAA,GAAI,CAACC,GAAIH,EAAMf,UAAS,IAC5BF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,QACfF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,eAAcF,EAAAA,cAACqB,EAAAA,EAAG,CAACC,MAAOJ,EAAUK,gBAAgBD,MAAOE,IAAK9B,KAC/EM,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,gCAAgCc,GACnDhB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBACfF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,eAAcF,EAAAA,cAAAA,KAAAA,KAAKN,MAC/BoB,EAAI,GAAKA,EAAI,IAAMd,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,WAAWP,EAAY8B,OAAS,IAAMlC,EAAUI,GACrFK,EAAAA,cAACG,EAAAA,EAAK,CAACC,QAAQ,OAAOsB,IAAK,GAAIC,WAAW,SAASzB,UAAU,YAC7DF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,QAAQN,EAAKiB,KAAI,SAACe,GAAO,OAAK5B,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,OAAO0B,EAAU,QAM7E,KACEzC,EAAMsC,QAAUzB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,aAC/BF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,aAAY,cAG7BF,EAAAA,cAAAA,MAAAA,KAAK,6DAKjB,C","sources":["webpack://samuellawrentz-s-portfolio/./src/pages/blog/index.tsx"],"sourcesContent":["import { graphql, Link } from 'gatsby'\nimport React, { useState } from 'react'\nimport SEO from '../../components/seo'\nimport './index.scss'\nimport Img from 'gatsby-image'\nimport { Block } from '../../components/block'\nimport Input from '../../components/input'\nimport Button from '../../components/button'\n\nfunction Blog({ data }: any) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const blogs = data.allMdx.nodes.filter(({excerpt, frontmatter: {title, description, tags}}: any) => `${excerpt}|${title}|${description}|${tags.join('|')}`.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1)\n  return (\n    <div>\n        <SEO title=\"Samuel Lawrentz - Tech Blog, Web development, CSS, JS\"\n    description=\"How I work with frontend stack and automate stuff to solve the problem of maintaining, modifying, and upgrading frontend technologies.\"\n    />\n    <div className=\"blog-page-title\">\n      <h1>THE BLOG </h1>\n      <div className=\"search-bar\">\n      <Block display='flex' spacing={[0, 32]} className='input-block-search'><Input maxlength=\"30\" placeholder=\"Search for a blog or topic...\" onChange={({target}: any) => setSearchTerm(target.value)} icon=\"search\"/></Block>\n      </div>\n    </div>\n    <div className=\"blogs home-blog\">\n        {blogs.map(({excerpt, frontmatter: {date, title, path, heroImage, description, tags}}: any, i: number) => {\n          i = i + 1\n            return <Link to={path} className={``}>\n                <div className=\"card\">\n                <div className=\"card__image\"><Img fluid={heroImage.childImageSharp.fluid} alt={title}/></div>\n                <div className=\"card__date text-regularLight\">{date}</div>\n            <div className=\"card__details\">\n            <div className=\"card__title\"><h3>{title}</h3></div>\n            {!(i % 2 && i % 5) && <div className='subtext'>{description.length > 150 ? excerpt : description}</div>}\n            <Block display=\"flex\" gap={48} alignItems=\"center\" className=\"date-tag\">            \n            <div className=\"tags\">{tags.map((tag:any) => <div className=\"tag\">{tag}</div>)}</div>\n            </Block>\n            </div>\n                </div>\n            </Link>\n            \n            })}\n            {!blogs.length && <div className='not-found'>\n              <div className='man-emoji'>\n            ¯\\_(ツ)_/¯\n            </div>\n            <div>Say that again? I'm pretty sure, we don't do that here.</div>\n            </div>}\n    </div>\n    </div>\n  )\n}\n\nexport default Blog\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: {fields: [frontmatter___date], order: DESC}\n      filter: {frontmatter: {published: {eq: true}}}\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 150)\n        frontmatter {\n          title\n          tags\n          description\n          date(formatString: \"DD MMM, YYYY\")\n\t\t      path\n          heroImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }`"],"names":["Blog","data","useState","searchTerm","setSearchTerm","blogs","allMdx","nodes","filter","excerpt","_ref2$frontmatter","frontmatter","title","description","tags","join","toLowerCase","indexOf","React","SEO","className","Block","display","spacing","Input","maxlength","placeholder","onChange","target","value","icon","map","i","_ref4$frontmatter","date","path","heroImage","Link","to","Img","fluid","childImageSharp","alt","length","gap","alignItems","tag"],"sourceRoot":""}