{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-blog-my-take-on-css-grids-post-mdx-0fc0f60b9dd935e6fc48.js","mappings":"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","sources":["webpack://samuellawrentz-s-portfolio/./blog/my-take-on-css-grids/post.mdx","webpack://samuellawrentz-s-portfolio/./src/templates/blog-post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    h3: \"h3\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"For a long time, I was against the use of modern CSS properties and tools. This was because the organization that I used to work for supports older versions of \", React.createElement(_components.a, {\n    href: \"https://en.wikipedia.org/wiki/Internet_Explorer_version_history#:~:text=The%20first%20version%20of%20Internet,other%20companies%20initiating%20browser%20development.\"\n  }, \"Internet Explorer\"), \". So Flexbox and Grid were out of the equation. It was just \", React.createElement(_components.code, null, \"position\"), \" \", React.createElement(_components.code, null, \"display\"), \" \", React.createElement(_components.code, null, \"float\"), \" \", React.createElement(_components.code, null, \"clear\"), \" \", React.createElement(_components.code, null, \"text-align\"), \" \", React.createElement(_components.code, null, \"vertical-align\"), \" properties that I was using for positioning.\"), \"\\n\", React.createElement(_components.p, null, \"Later when I moved to a new organization, there were no such restrictions. All I had to do was make the web pages load faster and look good on all devices and browsers. Then I took interest in \", React.createElement(_components.code, null, \"flexbox\"), \". I almost use all the flex properties regularly and they are stored in my mind as a fresh copy.\"), \"\\n\", React.createElement(_components.p, null, \"Even when I was working with flexbox, I always looked up to CSS Grids as something awesome. Every time I try to learn/read and understand it, I would get bored or screw up my understanding. But now, after eons, I guess I've finally cracked up the mystery behind CSS Grids.\"), \"\\n\", React.createElement(_components.p, null, \"Recently, I played a game that has like 80 levels in it, which progressively teaches you about CSS grids. It took me 3 days to complete all the levels. I played it during my leisure time, it was fun. Thanks to the creator. You can give it a try, it's interesting.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Play it here - \", React.createElement(_components.a, {\n    href: \"https://codingfantasy.com/games/css-grid-attack\"\n  }, \"Coding fantasy - CSS Grid game\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Do we need media queries? I guess not.\"), \"\\n\", React.createElement(_components.p, null, \"There are functions in CSS!! Yes, you heard me - functions! What if I told you that you are already using them!? Yes, \", React.createElement(_components.code, null, \"rgb()\"), \", \", React.createElement(_components.code, null, \"rgba()\"), \", \", React.createElement(_components.code, null, \"hsl()\"), \", \", React.createElement(_components.code, null, \"calc()\"), \", etc all these are CSS functions. Grids introduce few new functions to use \", React.createElement(_components.code, null, \"repeat()\"), \"and \", React.createElement(_components.code, null, \"minmax()\"), \".\"), \"\\n\", React.createElement(_components.h3, null, \"WTH is \", React.createElement(_components.code, null, \"minmax()\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"With \", React.createElement(_components.code, null, \"minmax()\"), \" we can avoid writing media queries and breakpoints. All you have to do is define a minimum width and a maximum width for your grid cells. The rest would be taken care of by CSS.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"minmax(minimum-value, max-value)\"), \"\\nThe values can be any of these \", React.createElement(_components.code, null, \"px\"), \", \", React.createElement(_components.code, null, \"%\"), \", \", React.createElement(_components.code, null, \"fr\"), \", \", React.createElement(_components.code, null, \"min-content\"), \", \", React.createElement(_components.code, null, \"max-content\"), \".  Alright, we have talked a lot about CSS and grids. Let's see some code.\"), \"\\n\", React.createElement(_components.h2, null, \"Tile layout\"), \"\\n\", React.createElement(_components.p, null, \"Previously, tile layout was difficult and we had to write a bunch of CSS code. Now with grid, it has become a breeze. I use the CSS grid for my \", React.createElement(_components.a, {\n    href: \"https://samuellawrentz.com/blog/\"\n  }, \"blog listing page\"), \". Do check it out!\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<deckgo-highlight-code language=\\\"css\\\"  >\\n          <code slot=\\\"code\\\">.grid {\\n  display: grid;\\n  grid-gap: 15px;\\n  // auto-fit takes care of the number of columns it can fit into\\n  // the given space\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n  grid-auto-rows: 200px;\\n  grid-auto-flow: dense;\\n}</code>\\n        </deckgo-highlight-code>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Breaking down into bits\"), \"\\n\", React.createElement(_components.p, null, \"Okay, let me break down the above style into some readable components\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"display: grid\"), \"\\nObviously, This is required.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"grid-gap:15px\"), \"\\nThis is used to define a gap between the grid cells. Forget about margins. If it is a grid, we use \", React.createElement(_components.code, null, \"gap\"), \" or \", React.createElement(_components.code, null, \"grid-gap\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"grid-template-columns\"), \"\\nThis is used to define the blueprint of the grid columns - describes how many columns and the width of each column.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"repeat()\"), \"\\nAs mentioned earlier, this is a CSS function, that repeats whatever is passed as a 2nd argument for the number of times passed in the 1st argument.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"auto-fit\"), \"\\nCalculates the number of columns that need to be generated based on the specified width.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"minmax()\"), \"\\nThis also is a CSS function, we've already covered it above.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"grid-auto-rows\"), \"\\nThis property defines a standard height for the rows so that you don't have to specify explicit heights.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"grid-auto-flow\"), \"\\nThis property is used to specify the algorithm that is used to fill the grid. By default it is \", React.createElement(_components.code, null, \"row\"), \". \", React.createElement(_components.code, null, \"dense\"), \" fills the gap with smaller items wherever possible. This makes the grid look dense.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"I've shared my thoughts and understanding. Feedbacks are valuable. Do follow this blog for more updates.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Written with \", React.createElement(_components.a, {\n    href: \"https://stackedit.io/\"\n  }, \"StackEdit\"), \".\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/profile/profile/blog/my-take-on-css-grids/post.mdx\";\nimport React, {useEffect} from \"react\";\nimport Giscus from \"@giscus/react\";\nimport \"./blog.scss\";\nimport Img from \"gatsby-image\";\nimport {defineCustomElements as deckDeckGoHighlightElement} from \"@deckdeckgo/highlight-code/dist/loader\";\nimport SEO from \"../components/seo\";\nimport {Block} from \"../components/block\";\nimport Banner from \"../components/banner\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {StickyShareButtons} from \"sharethis-reactjs\";\nconst components = {\n  Banner\n};\nfunction Blog(props) {\n  useEffect(() => {\n    deckDeckGoHighlightElement();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"blog-content\"\n  }, React.createElement(SEO, {\n    title: `Samuel Lawrentz | ${props.data.mdx.frontmatter.title}`,\n    description: props.data.mdx.frontmatter.description,\n    image: `/og-images/${props.data.mdx.frontmatter.path.replace(/[/-]/gi, \"\")}.png`,\n    article: true\n  }), React.createElement(Img, {\n    fluid: props.data.mdx.frontmatter.heroImage.childImageSharp.fluid,\n    className: \"hero-image\"\n  }), React.createElement(\"h1\", null, props.data.mdx.frontmatter.title), React.createElement(Block, {\n    className: \"tags\",\n    spacing: [0]\n  }, props.data.mdx.frontmatter.tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\"\n  }, tag))), React.createElement(\"p\", {\n    className: \"regularLight\"\n  }, React.createElement(\"div\", {\n    className: \"text-regularLight\"\n  }, props.data.mdx.frontmatter.date)), React.createElement(Block, {\n    className: \"blog-cont text-regular\",\n    spacing: [72]\n  }, React.createElement(MDXProvider, {\n    components: components\n  }, React.createElement(\"div\", null, props.children))), React.createElement(Block, {\n    spacing: [32]\n  }, \"That's it for now, thanks for reading! You can find me at\", \" \", React.createElement(\"a\", {\n    href: \"https://x.com/samuellawrentz\"\n  }, \" @samuellawrentz\"), \" on X.\"), React.createElement(Giscus, {\n    repo: \"samuellawrentz/blog-comments\",\n    repoId: \"R_kgDOH0vDow\",\n    category: \"General\",\n    categoryId: \"DIC_kwDOH0vDo84CQ111\",\n    mapping: \"pathname\",\n    reactionsEnabled: \"0\",\n    emitMetadata: \"0\",\n    theme: \"dark\"\n  }), React.createElement(StickyShareButtons, {\n    config: {\n      alignment: \"left\",\n      color: \"social\",\n      enabled: true,\n      font_size: 16,\n      hide_desktop: false,\n      labels: \"counts\",\n      language: \"en\",\n      min_count: 0,\n      networks: [\"linkedin\", \"facebook\", \"twitter\", \"pinterest\", \"email\", \"whatsapp\"],\n      padding: 12,\n      radius: 4,\n      show_total: true,\n      show_mobile: true,\n      show_toggle: true,\n      size: 48,\n      top: 160,\n      url: `https://samuellawrentz.com${props.data.mdx.frontmatter.path}`,\n      description: props.data.mdx.frontmatter.description,\n      title: props.data.mdx.frontmatter.title,\n      message: `Check out this post by Samuel Lawrentz on - ${props.data.mdx.frontmatter.title}.\n            Find it here - https://samuellawrentz.com${props.data.mdx.frontmatter.path}\n            `,\n      subject: `Samuel Lawrentz Blog - ${props.data.mdx.frontmatter.title}`,\n      username: \"samuellawrentz\"\n    }\n  }));\n}\nBlog\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Blog, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"3567673815\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","code","blockquote","h2","h3","span","ul","li","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","Banner","Blog","useEffect","deckDeckGoHighlightElement","className","SEO","title","data","mdx","frontmatter","description","image","path","replace","article","Img","fluid","heroImage","childImageSharp","Block","spacing","tags","map","tag","date","MDXProvider","children","Giscus","repo","repoId","category","categoryId","mapping","reactionsEnabled","emitMetadata","theme","StickyShareButtons","config","alignment","color","enabled","font_size","hide_desktop","labels","language","min_count","networks","padding","radius","show_total","show_mobile","show_toggle","size","top","url","message","subject","username","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}