{"version":3,"file":"component---src-pages-blog-index-tsx-34b67c9fffa2dfacafd0.js","mappings":"sKAaA,IATA,SAAeA,GACb,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACZF,EAAMG,MAAQF,EAAAA,cAACG,EAAAA,EAAD,CAAMC,MAAM,WAAWC,KAAMN,EAAMG,KAAMD,UAAU,YAClED,EAAAA,cAAAA,QAAWD,M,4FC4CjB,UA3CA,YAA8B,IAAdO,EAAa,EAAbA,KACd,GAAoCC,EAAAA,EAAAA,UAAS,IAAtCC,EAAP,KAAmBC,EAAnB,KACMC,EAAQJ,EAAKK,OAAOC,MAAMC,QAAO,gBAAEC,EAAF,EAAEA,QAAF,IAAWC,YAAX,OAAyK,KAAzGD,EAAH,IAA7D,EAAyBE,MAAoC,IAA7D,EAAgCC,YAA6B,IAA7D,EAA6CC,KAA2DC,KAAK,MAAOC,cAAcC,QAAQb,EAAWY,kBAC5L,OACEpB,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAACsB,EAAAA,EAAD,CAAKN,MAAM,wDACfC,YAAY,2IAEZjB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mBACbD,EAAAA,cAAAA,KAAAA,KAAAA,aACAA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACfD,EAAAA,cAACuB,EAAAA,EAAD,CAAOC,QAAQ,OAAOC,QAAS,CAAC,EAAG,IAAKxB,UAAU,sBAAqBD,EAAAA,cAAC0B,EAAAA,EAAD,CAAOC,UAAU,KAAKC,YAAY,gCAAgCC,SAAU,gBAAEC,EAAF,EAAEA,OAAF,OAAmBrB,EAAcqB,EAAOC,QAAQ7B,KAAK,cAG1MF,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mBACVS,EAAMsB,KAAI,WAAiFC,GAAe,IAA9FnB,EAA6F,EAA7FA,QAA6F,IAApFC,YAAcmB,EAAsE,EAAtEA,KAAMlB,EAAgE,EAAhEA,MAAOmB,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,UAAWnB,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,KAE3E,OADFe,GAAQ,EACCjC,EAAAA,cAACqC,EAAAA,GAAD,CAAMC,GAAIH,EAAMlC,UAAS,IAC5BD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eAAcD,EAAAA,cAACuC,EAAAA,EAAD,CAAKC,MAAOJ,EAAUK,gBAAgBD,MAAOE,IAAK1B,KAC/EhB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gCAAgCiC,GACnDlC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eAAcD,EAAAA,cAAAA,KAAAA,KAAKgB,MAC/BiB,EAAI,GAAKA,EAAI,IAAMjC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WAAWgB,EAAY0B,OAAS,IAAM7B,EAAUG,GACrFjB,EAAAA,cAACuB,EAAAA,EAAD,CAAOC,QAAQ,OAAOoB,IAAK,GAAIC,WAAW,SAAS5C,UAAU,YAC7DD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QAAQiB,EAAKc,KAAI,SAACc,GAAD,OAAa9C,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OAAO6C,eAOjEpC,EAAMiC,QAAU3C,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aAC/BD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aAAf,cAGFD,EAAAA,cAAAA,MAAAA,KAAAA","sources":["webpack://samuellawrentz-s-portfolio/./src/components/input/index.tsx","webpack://samuellawrentz-s-portfolio/./src/pages/blog/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Icon } from '../icon'\nimport './index.scss'\n\nfunction Input(props: any) {\n  return (\n    <div className='input-wrapper'>\n      {props.icon && <Icon color=\"surface2\" name={props.icon} className=\"sl-icon\"/>}\n      <input {...props} />\n    </div>\n  )\n}\n\nexport default Input","import { graphql, Link } from 'gatsby'\nimport React, { useState } from 'react'\nimport SEO from '../../components/seo'\nimport './index.scss'\nimport Img from 'gatsby-image'\nimport { Block } from '../../components/block'\nimport Input from '../../components/input'\nimport Button from '../../components/button'\n\nfunction Blog({ data }: any) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const blogs = data.allMdx.nodes.filter(({excerpt, frontmatter: {title, description, tags}}: any) => `${excerpt}|${title}|${description}|${tags.join('|')}`.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1)\n  return (\n    <div>\n        <SEO title=\"Samuel Lawrentz - Tech Blog, Web development, CSS, JS\"\n    description=\"How I work with frontend stack and automate stuff to solve the problem of maintaining, modifying, and upgrading frontend technologies.\"\n    />\n    <div className=\"blog-page-title\">\n      <h1>THE BLOG </h1>\n      <div className=\"search-bar\">\n      <Block display='flex' spacing={[0, 32]} className='input-block-search'><Input maxlength=\"30\" placeholder=\"Search for a blog or topic...\" onChange={({target}: any) => setSearchTerm(target.value)} icon=\"search\"/></Block>\n      </div>\n    </div>\n    <div className=\"blogs home-blog\">\n        {blogs.map(({excerpt, frontmatter: {date, title, path, heroImage, description, tags}}: any, i: number) => {\n          i = i + 1\n            return <Link to={path} className={``}>\n                <div className=\"card\">\n                <div className=\"card__image\"><Img fluid={heroImage.childImageSharp.fluid} alt={title}/></div>\n                <div className=\"card__date text-regularLight\">{date}</div>\n            <div className=\"card__details\">\n            <div className=\"card__title\"><h3>{title}</h3></div>\n            {!(i % 2 && i % 5) && <div className='subtext'>{description.length > 150 ? excerpt : description}</div>}\n            <Block display=\"flex\" gap={48} alignItems=\"center\" className=\"date-tag\">            \n            <div className=\"tags\">{tags.map((tag:any) => <div className=\"tag\">{tag}</div>)}</div>\n            </Block>\n            </div>\n                </div>\n            </Link>\n            \n            })}\n            {!blogs.length && <div className='not-found'>\n              <div className='man-emoji'>\n            ¯\\_(ツ)_/¯\n            </div>\n            <div>Say that again? I'm pretty sure, we don't do that here.</div>\n            </div>}\n    </div>\n    </div>\n  )\n}\n\nexport default Blog\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: {fields: [frontmatter___date], order: DESC}\n      filter: {frontmatter: {published: {eq: true}}}\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 150)\n        frontmatter {\n          title\n          tags\n          description\n          date(formatString: \"DD MMM, YYYY\")\n\t\t      path\n          heroImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }`"],"names":["props","React","className","icon","Icon","color","name","data","useState","searchTerm","setSearchTerm","blogs","allMdx","nodes","filter","excerpt","frontmatter","title","description","tags","join","toLowerCase","indexOf","SEO","Block","display","spacing","Input","maxlength","placeholder","onChange","target","value","map","i","date","path","heroImage","Link","to","Img","fluid","childImageSharp","alt","length","gap","alignItems","tag"],"sourceRoot":""}