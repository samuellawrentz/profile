{"version":3,"file":"component---src-pages-projects-quotes-generator-index-tsx-e7674305cfc10299affc.js","mappings":"wMAaI,SAASA,EAAWC,EAAKC,EAAgBC,QAAa,IAA7BD,IAAAA,EAAS,YAAoB,IAAbC,IAAAA,EAAU,GACjD,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAUF,SAASC,cAAc,OAEnCE,EAAa,IAAIC,SAAQ,SAAUC,GACnCH,EAAQI,OAAS,WAEbP,EAAOQ,OAASL,EAAQK,OACxBR,EAAOS,MAAQN,EAAQM,MACvB,IAAMC,EAAUV,EAAOW,WAAW,MAClCD,EAAQE,OAAS,kBACjBF,EAAQG,UAAUV,EAAS,EAAG,EAAGA,EAAQM,MAAON,EAAQK,QACxD,IAAMX,EAAMG,EAAOc,UAAP,SAA0BhB,EAAUC,GAChDO,EAAQT,OAIhB,OADAM,EAAQY,IAAMlB,EACPO,EAEX,SAASY,EAAmBC,GACxB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,UAAYH,EAAII,OAAS,MAuB1D,IAAMC,EAAS,CACb,QACA,OACA,OACA,MACA,SACA,MACA,QACA,SACA,OACA,QACA,UACA,MACA,WACA,QACA,WACA,QACA,QACA,MACA,UACA,UACA,WAaEC,EAAiB,KAMrB,IAAIC,EAAa,SAAUC,EAAWC,GACpC,IAAIC,EAAM,IAAIC,eACdD,EAAIpB,OAAS,WACX,IAAIsB,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjBL,EAASG,EAAOG,SAElBH,EAAOI,cAAcN,EAAIO,WAG3BP,EAAIQ,KAAK,MAAOV,GAChBE,EAAIS,aAAe,OACnBT,EAAIU,QAGC,SAASC,IACdC,QAAQC,IAAI,UACKxB,EAAmBM,GACpCE,EAAW,uCAAuC,SAAUiB,GAC1D7C,EAAW6C,GAASC,MAAK,SAAU7C,GACjC0B,EAAeoB,MAAM/B,OAAS,gBAC9BW,EAAeoB,MAAMC,gBAAkB,OAAS/C,EAAM,UAKrD,SAASgD,IACd,IAAMC,EAAQC,EAAE,oBAAoBD,QACpCA,EAAME,SAAS/C,SAASgD,MACxBH,EAAMrC,MAAM,KACZyC,YAAYjD,SAASkD,cAAc,oBAAqB,CACtDC,SAAUC,OAAOD,UAChBV,MAAK,SAAU1C,GAChB,IAAIsD,EAAOrD,SAASC,cAAc,KAClCoD,EAAKC,SAAW,gCAChBD,EAAKE,KAAOxD,EAAOc,YACnBwC,EAAKG,QACLX,EAAMY,Y,8pBCpHF,IAAMC,EAAO,SAAC,GAAuF,IAAD,IAApFC,UAAAA,OAAoF,MAAxE,GAAwE,EAApEC,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,MAAOpB,EAAiD,EAAjDA,MAAOqB,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,IAAQC,GAAsB,YACxG,GAAkCC,EAAAA,EAAAA,UAASJ,EAAK,SAAYA,EAAZ,SAAuBK,GAAhEC,EAAP,KAAkBC,EAAlB,KACIC,EAAiB,GACfC,EAAUP,EAchB,OAZIF,GAASC,IACXO,EAAiB,CACfE,aAAc,kBAAMH,EAAa,SAASN,EAAV,MAChCU,aAAc,kBAAMJ,EAAa,SAASP,EAAV,SAKpCY,EAAAA,EAAAA,YAAU,WACRL,EAAa,SAASP,EAAV,OACX,CAACA,IAGFa,EAAAA,cAAAA,OAAAA,OAAAA,OAAAA,CACEhB,UAAW,CACT,mBACCK,EAA+B,uBAAzB,uBACPL,GACAiB,KAAK,KACPlC,MAAK,OACAA,GADA,IAEHoB,MAAOM,EACPS,SAAUhB,EACViB,OAAQf,GAAc,UACtBgB,SAAU,SACVC,WAAY,EACZxE,MAAOqD,EACPtD,OAAQsD,KAENI,EACAK,GAEHC,EAAUI,EAAAA,cAACJ,EAAD,MAAcX,ICtDjC,EAAe,IAA0B,4ECAzC,EAAe,IAA0B,wECAzC,EAAe,IAA0B,6DC8EzC,MAhEA,WAKE,OAJEc,EAAAA,EAAAA,YAAU,WL8EZpD,EAAiBtB,SAASkD,cAAc,oBACxCb,OK1EFsC,EAAAA,cAAAA,MAAAA,KACAA,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,yBACfgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,sBACfgB,EAAAA,cAAAA,KAAAA,KAAAA,yBACAA,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,iCAAf,mCACAgB,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,IAAAA,KAAAA,kGACAA,EAAAA,cAAAA,KAAAA,KAAAA,kBACAA,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,8CACAA,EAAAA,cAAAA,KAAAA,KAAAA,yBACAA,EAAAA,cAAAA,KAAAA,KAAAA,iCACAA,EAAAA,cAAAA,KAAAA,KAAAA,8CACAA,EAAAA,cAAAA,KAAAA,KAAAA,kEAGJA,EAAAA,cAAAA,IAAAA,CAAGhB,UAAU,gCAAb,0EAKFgB,EAAAA,cAAAA,MAAAA,CAAKM,GAAG,iBACJN,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,YACbgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,mBACbgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,kBAAkBjB,MAAO,CAAC/B,OAAQ,mBACjDgE,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,SACbgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,OAAOuB,iBAAe,GAArC,cACAP,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,SAASuB,iBAAe,GAAvC,sBAINP,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,YACbgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,0BACbgB,EAAAA,cAAAA,OAAAA,CAAMhB,UAAU,UAAUwB,QAAS9C,GAAcsC,EAAAA,cAACjB,EAAD,CAAME,KAAK,UAAUE,MAAM,cAC5Ea,EAAAA,cAAAA,OAAAA,CAAMhB,UAAU,UAAUwB,QAASvC,GAAe+B,EAAAA,cAACjB,EAAD,CAAME,KAAK,WAAWE,MAAM,kBAKlFa,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,WACbgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,kBAAf,eACAgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,sBACbgB,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,QACbgB,EAAAA,cAAAA,MAAAA,CAAK7D,IAAKsE,EAAKC,IAAI,MAErBV,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,QACbgB,EAAAA,cAAAA,MAAAA,KAAMA,EAAAA,cAAAA,MAAAA,CAAK7D,IAAKwE,EAAMD,IAAI,OAE5BV,EAAAA,cAAAA,MAAAA,CAAKhB,UAAU,QACbgB,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAAAA,MAAAA,CAAK7D,IAAKyE,EAAMF,IAAI,Y,qBCtEpB,SAASG,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAW1E,OAAQwE,IACjCD,EAAMG,EAAWF,GACbF,EAASO,QAAQN,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E","sources":["webpack://samuellawrentz-s-portfolio/./src/utils/scripts/quote.js","webpack://samuellawrentz-s-portfolio/./src/components/icon/index.tsx","webpack://samuellawrentz-s-portfolio/./src/images/quotes/image_from_samuellawrentz (1).png","webpack://samuellawrentz-s-portfolio/./src/images/quotes/image_from_samuellawrentz.png","webpack://samuellawrentz-s-portfolio/./src/images/quotes/motivation (2).png","webpack://samuellawrentz-s-portfolio/./src/pages/projects/quotes-generator/index.tsx","webpack://samuellawrentz-s-portfolio/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["``\n\n\n\n\n\n\n\n\n\n\n\n\n    function screenshot(url, format = 'png', quality = 1) {\n      const canvas = document.createElement('canvas')\n      const imgNode = document.createElement('img');\n\n      var retPromise = new Promise(function (resolve) {\n          imgNode.onload = function () {\n\n              canvas.height = imgNode.height\n              canvas.width = imgNode.width;\n              const context = canvas.getContext('2d')\n              context.filter = 'brightness(0.5)';\n              context.drawImage(imgNode, 0, 0, imgNode.width, imgNode.height)\n              const url = canvas.toDataURL(`image/${format}`, quality);\n              resolve(url)\n          }\n      });\n      imgNode.src = url;\n      return retPromise;\n  }\n  function getRandomFromArray(arr){\n      return arr[Math.floor(Math.random() * (arr.length - 0.1))];\n  }\nfunction generate(text){\n  if(text.length > 115)\n  document.querySelector('.text').style.fontSize = '23px';\n  document.querySelector('.text').textContent = text;\n  const prom = new Promise((resolve, reject) => {\n      getDataUri('https://source.unsplash.com/random/'+ getRandomFromArray(dimension) +'?'+selected+'&sig=' + Math.floor(Math.random() * 100), function (dataURL) {\n      const img = document.querySelector('.quote-container');\n      screenshot(dataURL).then(function(url){\n          img.style.backgroundImage = 'url(' + url + ')';\n          html2canvas(document.querySelector('.quote-container'), { scrollY: -window.scrollY }).then(function (canvas) {\n          resolve(canvas.toDataURL());\n      });\n      }\n      );\n  });\n  });\n  return prom;\n}\n\n\n\nconst topics = [\n  \"bikes\",\n  \"cars\",\n  \"ship\",\n  \"sea\",\n  \"nature\",\n  \"sky\",\n  \"plane\",\n  \"people\",\n  \"lion\",\n  \"tiger\",\n  \"success\",\n  \"art\",\n  \"creation\",\n  \"birds\",\n  \"wildlife\",\n  \"clown\",\n  \"joker\",\n  \"sea\",\n  \"machine\",\n  \"animals\",\n  \"cheetah\",\n];\nconst dimension = [\n  \"400x700\",\n  \"400x600\",\n  \"800x600\",\n  \"400x800\",\n  \"500x1000\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n];\nlet imageContainer = null;\n\nexport function initImage() {\n  imageContainer = document.querySelector(\".image-container\");\n  refreshImage()\n}\nvar getDataUri = function (targetUrl, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.onload = function () {\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      callback(reader.result);\n    };\n    reader.readAsDataURL(xhr.response);\n  };\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  xhr.open(\"GET\", targetUrl);\n  xhr.responseType = \"blob\";\n  xhr.send();\n};\n\nexport function refreshImage() {\n  console.log('adfadf')\n  const selected = getRandomFromArray(topics);\n  getDataUri(\"https://source.unsplash.com/random/\", function (dataURL) {\n    screenshot(dataURL).then(function (url) {\n      imageContainer.style.filter = \"brightness(1)\";\n      imageContainer.style.backgroundImage = \"url(\" + url + \")\";\n    });\n  });\n}\n\nexport function downloadImage() {\n  const clone = $(\".quote-container\").clone();\n  clone.appendTo(document.body);\n  clone.width(400);\n  html2canvas(document.querySelector(\".quote-container\"), {\n    scrollY: -window.scrollY,\n  }).then(function (canvas) {\n    var link = document.createElement(\"a\");\n    link.download = \"image_from_samuellawrentz.png\";\n    link.href = canvas.toDataURL();\n    link.click();\n    clone.remove();\n  });\n}\n","/**\n * Google Icons that are used in the application.\n *\n * Please visit https://fonts.google.com/icons to find different icons and their names\n */\n\nimport React, { ReactNode, useState, useEffect,  } from \"react\"\n\ninterface IconProp {\n    name?: string,\n    className?: string,\n    size?: number,\n    color?: string,\n    style?: React.CSSProperties,\n    hoverColor?: string,\n    svg?: React.ComponentType,\n}\n export const Icon = ({ className = '', name, size, color, style, hoverColor, svg, ...props }: IconProp) => {\n    const [iconColor, setIconColor] = useState(color ? `var(--${color})` : undefined)\n    let iconEventProps = {}\n    const SvgIcon = svg\n  \n    if (color && hoverColor) {\n      iconEventProps = {\n        onMouseEnter: () => setIconColor(`var(--${hoverColor})`),\n        onMouseLeave: () => setIconColor(`var(--${color})`),\n      }\n    }\n  \n    // Effect to update color if the prop chages dynamically\n    useEffect(() => {\n      setIconColor(`var(--${color})`)\n    }, [color])\n  \n    return (\n      <span\n        className={[\n          'sg contacto-icon',\n          !svg ? 'material-icons-round' : 'contacto-icon-custom',\n          className,\n        ].join(' ')}\n        style={{\n          ...style,\n          color: iconColor,\n          fontSize: size,\n          cursor: hoverColor && 'pointer',\n          overflow: 'hidden',\n          lineHeight: 1,\n          width: size,\n          height: size,\n        }}\n        {...props}\n        {...iconEventProps}\n      >\n        {SvgIcon ? <SvgIcon /> : name}\n      </span>\n    )\n  }","export default __webpack_public_path__ + \"static/image_from_samuellawrentz (1)-7341d2d6ba3640c3ee97b9fa180adf1f.png\";","export default __webpack_public_path__ + \"static/image_from_samuellawrentz-92b602386fd15e625db65fac06d772fe.png\";","export default __webpack_public_path__ + \"static/motivation (2)-b8cd0a9ca22eb71dcc5ca790b00e3d54.png\";","import React, { useEffect } from 'react'\nimport './style.css'\n//@ts-ignore\nimport {initImage, refreshImage, downloadImage} from \"../../../utils/scripts/quote.js\"\nimport { Icon } from '../../../components/icon'\n//@ts-ignore\nimport img from '../../../images/quotes/image_from_samuellawrentz (1).png'\n//@ts-ignore\nimport img1 from '../../../images/quotes/image_from_samuellawrentz.png'\n//@ts-ignore\nimport img2 from '../../../images/quotes/motivation (2).png'\n\n\n\nfunction QuotesGenerator() {\n    useEffect(() => {\n        initImage()\n        \n    })\n  return (\n<div>\n<div className=\"container quotes-page\">\n<div className='intro quotes-intro'>\n<h1>Image Quote Generator</h1>\n<div className=\"sub-heading text-regularLight\">Built with ❤️ by Samuellawrentz</div>\n<div>\n  <p>This is a simple image generator that helps you put your quotes and download them as an image.</p>\n  <h3>How to use it?</h3>\n  <p>\n    <ol>\n      <li>The card loads up with some random picture</li>\n      <li>Enter your text/quote</li>\n      <li>Change/remove the author name</li>\n      <li>Use the refresh button to change the image</li>\n      <li>Click the download button once you are done with the changes</li>\n    </ol>\n  </p>\n  <p className='text-regularLight blockquote'>\n    More features like custom image, filters are on the way! Stay tuned.\n  </p>\n</div>\n</div>\n<div id=\"sam-container\">\n    <div className=\"contents\">\n      <div className=\"quote-container\">\n        <div className=\"image-container\" style={{filter: 'brightness(1)'}}></div>\n        <div className='quote'>\n          <div className=\"text\" contentEditable>Type here.</div>\n          <div className=\"author\" contentEditable>Samuel Lawrentz</div>\n        </div>\n      </div>\n    </div>\n    <div className=\"controls\">\n      <div className=\"image-selector control\">\n        <span className=\"button1\" onClick={refreshImage}><Icon name=\"refresh\" color='surface2'/></span>\n        <span className=\"button1\" onClick={downloadImage}><Icon name=\"download\" color='surface2'/></span>\n      </div>\n    </div>\n  </div>\n    </div>\n    <div className=\"section\">\n      <div className=\"section__title\">Few Samples</div>\n      <div className='cards quotes-cards'>\n        <div className=\"card\">\n          <img src={img} alt=\"\" />\n        </div>\n        <div className=\"card\">\n          <div ><img src={img1} alt=\"\" /></div>\n        </div>\n        <div className=\"card\">\n          <div><img src={img2} alt=\"\" /></div>\n        </div>\n      </div>\n    </div>\n</div>\n  )\n}\n\nexport default QuotesGenerator","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["screenshot","url","format","quality","canvas","document","createElement","imgNode","retPromise","Promise","resolve","onload","height","width","context","getContext","filter","drawImage","toDataURL","src","getRandomFromArray","arr","Math","floor","random","length","topics","imageContainer","getDataUri","targetUrl","callback","xhr","XMLHttpRequest","reader","FileReader","onloadend","result","readAsDataURL","response","open","responseType","send","refreshImage","console","log","dataURL","then","style","backgroundImage","downloadImage","clone","$","appendTo","body","html2canvas","querySelector","scrollY","window","link","download","href","click","remove","Icon","className","name","size","color","hoverColor","svg","props","useState","undefined","iconColor","setIconColor","iconEventProps","SvgIcon","onMouseEnter","onMouseLeave","useEffect","React","join","fontSize","cursor","overflow","lineHeight","id","contentEditable","onClick","img","alt","img1","img2","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf"],"sourceRoot":""}